#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef KITABOOSDKWITHREADER_SWIFT_H
#define KITABOOSDKWITHREADER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import Kitaboo_Reader_SDK;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <KitabooSDKWithReader/KitabooSDKWithReader.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="KitabooSDKWithReader",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC20KitabooSDKWithReader20AccessibilityManager")
@interface AccessibilityManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AccessibilityManager * _Nonnull sharedObject;)
+ (AccessibilityManager * _Nonnull)sharedObject SWIFT_WARN_UNUSED_RESULT;
- (void)setAccessibilityBundle;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_CLASS("_TtC20KitabooSDKWithReader5Chunk")
@interface Chunk : NSObject
- (nonnull instancetype)initWithContent:(NSString * _Nonnull)content lang:(NSString * _Nullable)lang mimeType:(NSString * _Nullable)mimeType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader7Content")
@interface Content : NSObject
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title chunks:(NSArray<Chunk *> * _Nonnull)chunks OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;

SWIFT_CLASS("_TtC20KitabooSDKWithReader12CustomSlider")
@interface CustomSlider : UISlider
- (CGRect)trackRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader14DisplayOptions")
@interface DisplayOptions : NSObject
- (nonnull instancetype)initWithTextSize:(NSInteger)textSize increaseSpacing:(BOOL)increaseSpacing fontFamily:(NSString * _Nonnull)fontFamily OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class KBHDThemeVO;
@class NSBundle;

SWIFT_CLASS("_TtC20KitabooSDKWithReader20HDDropdownController")
@interface HDDropdownController : UIViewController
@property (nonatomic) NSInteger selectedIndex;
@property (nonatomic, strong) KBHDThemeVO * _Nullable kbthemeVO;
@property (nonatomic, copy) void (^ _Nullable tapOnItem)(NSInteger);
- (nonnull instancetype)initWithDropDownData:(NSArray<NSString *> * _Nonnull)dropDownData;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;

@interface HDDropdownController (SWIFT_EXTENSION(KitabooSDKWithReader)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UITableViewCell;

@interface HDDropdownController (SWIFT_EXTENSION(KitabooSDKWithReader)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

enum HDAnalyticsEventType : NSInteger;
@class HDKitabooAnalyticsMetaData;

SWIFT_CLASS("_TtC20KitabooSDKWithReader25HDKitabooAnalyticsHandler")
@interface HDKitabooAnalyticsHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)trackEvent:(enum HDAnalyticsEventType)eventType metadata:(HDKitabooAnalyticsMetaData * _Nonnull)metadata;
- (void)notifyEvent:(NSString * _Null_unspecified)eventName eventInfo:(NSDictionary<NSString *, id> * _Null_unspecified)eventInfo;
- (NSString * _Nonnull)getTrackingJSON SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, HDAnalyticsEventType, open) {
  HDAnalyticsEventTypeKTypePageTracking = 0,
  HDAnalyticsEventTypeKTypeNoteCreated = 1,
  HDAnalyticsEventTypeKTypeImpHighlightCreated = 2,
  HDAnalyticsEventTypeKTypeNormHighlightCreated = 3,
  HDAnalyticsEventTypeKTypeNoteShared = 4,
  HDAnalyticsEventTypeKTypeNoteReceived = 5,
  HDAnalyticsEventTypeKTypeNoteDeleted = 6,
  HDAnalyticsEventTypeKTypeImpHighlightDeleted = 7,
  HDAnalyticsEventTypeKTypeNormHighlightDeleted = 8,
  HDAnalyticsEventTypeKTypeBookClose = 9,
  HDAnalyticsEventTypeKTypeBookOpen = 10,
  HDAnalyticsEventTypeKTypeImpHighlightReceived = 11,
  HDAnalyticsEventTypeKTypeNormHighlightReceived = 12,
  HDAnalyticsEventTypeKTypeImpHighlightShared = 13,
  HDAnalyticsEventTypeKTypeNormHighlightShared = 14,
  HDAnalyticsEventTypeKTypeLinkOpen = 15,
};


SWIFT_CLASS("_TtC20KitabooSDKWithReader26HDKitabooAnalyticsMetaData")
@interface HDKitabooAnalyticsMetaData : NSObject
- (nonnull instancetype)initWithPageTracking:(NSString * _Nullable)cfi pageId:(NSString * _Nullable)pageId timeSpent:(NSString * _Nullable)timeSpent chapterId:(NSString * _Nullable)chapterId chapterName:(NSString * _Nullable)chapterName uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBookOpen:(NSString * _Nullable)bookId openTimeStamp:(NSString * _Nullable)openTimeStamp classId:(NSString * _Nullable)classId suspendData:(NSString * _Nullable)suspendData uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBookClose:(NSString * _Nullable)accessTime lastPageFolio:(NSString * _Nullable)lastPageFolio uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUGCTracking:(NSString * _Nullable)pageId uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithResourceTracking:(NSDictionary<NSString *, id> * _Nullable)resourceDict uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol HDKitabooMediaBookReaderDelegate;
@protocol HDKitabooMediaPopOverControllerDelegate;
enum MediaBookType : NSInteger;
@class KitabooUser;
@class NSNumber;
@class HDKitabooMediaBookThemeVO;
@protocol UIViewControllerTransitionCoordinator;
@class UIButton;
@class HDMediaBookModel;
@class UIImageView;
@class SDKBookmarkVO;
@class HDMediaBookChapterVO;
@class HDMediaBookTranscriptVO;
@class UIView;

/// An object that initializes all the components which are part of the AudioBook/VideoBook.
/// A HDKitabooMediaBookReader initializes all the components which are part of the AudioBook/VideoBook and provides/handles call backs of all the components
/// <ul>
///   <li>
///     SuperClass : UIViewController
///   </li>
/// </ul>
SWIFT_CLASS("_TtC20KitabooSDKWithReader24HDKitabooMediaBookReader")
@interface HDKitabooMediaBookReader : UIViewController <HDAudioBookPlayerViewControllerDelegate, HDKitabooSleepTimerControllerDelegate, HDMediaBookBookmarkControllerDelegate, HDMediaBookNarrationSpeedControllerDelegate, HDMediaBookPlayerDelegate, HDMediaBookTOCControllerDelegate, HDVideoBookPlayerViewControllerDelegate, UIPopoverPresentationControllerDelegate>
/// The object that acts as the delegate of the HDKitabooMediaBookReader.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDKitabooMediaBookReaderDelegate> _Nullable delegate;
/// The object that acts as the delegate of the HDAudioBookPlayerViewController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDAudioBookPlayerViewControllerDelegate> _Nullable audioPlayerDelegate;
/// The object that acts as the delegate of the HDVideoBookPlayerViewController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDVideoBookPlayerViewControllerDelegate> _Nullable videoPlayerDelegate;
/// The object that acts as the delegate of the HDMediaBookTOCController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDMediaBookTOCControllerDelegate> _Nullable tocDelegate;
/// The object that acts as the delegate of the HDMediaBookNarrationSpeedController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDMediaBookNarrationSpeedControllerDelegate> _Nullable speedDelegate;
/// The object that acts as the delegate of the HDMediaBookBookmarkController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDMediaBookBookmarkControllerDelegate> _Nullable bookmarkDelegate;
/// The object that acts as the delegate of the HDMediaBookPlayer.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDMediaBookPlayerDelegate> _Nullable mediaPlayerDelegate;
/// The object that acts as the delegate of the HDKitabooSleepTimerController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDKitabooSleepTimerControllerDelegate> _Nullable sleepTimerDelegate;
/// The object that acts as the delegate of the HDKitabooMediaPopOverController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDKitabooMediaPopOverControllerDelegate> _Nullable popOverDelegate;
/// Initializes the HDKitabooMediaBookReader object
/// This method should be called to initialize the HDKitabooMediaBookReader object where the extension can be m3u8/mp3/mp4 etc.
/// \param mediaBookPath mediaBookPath is the path of the Media to be played.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (nonnull instancetype)init:(NSString * _Nullable)mediaBookPath mediaThumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookId:(NSString * _Nullable)bookId bookISBN:(NSString * _Nullable)bookISBN additionalInfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalInfo OBJC_DESIGNATED_INITIALIZER;
/// Initializes the HDKitabooMediaBookReader object
/// This method should be called to initialize the HDKitabooMediaBookReader object.
/// NOTE : This method will only be used for HLS downloaded book where <code>metaDataPath</code> will be the path where all the additional data of Media Book will be downloaded i.e. Media images, TOC etc.
/// \param metaDataPath metaDataPath will be the path where all the additional data of Media Book will be downloaded i.e. Media images, TOC etc.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param bookId bookId,  MediaBook bookId. Note : - It is a mandatory parameter and, It is the same asset name which is used to download the media.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (nonnull instancetype)initWithMediaMetaDataPath:(NSString * _Nullable)metaDataPath mediaThumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookISBN:(NSString * _Nullable)bookISBN bookId:(NSString * _Nullable)bookId additionalInfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalInfo OBJC_DESIGNATED_INITIALIZER;
/// Initializes the HDKitabooMediaBookReader object.
/// This method should be called to initialize the HDKitabooMediaBookReader object. This method only be called for HLS Online Media Books where user is not having the m3u8 path.
/// \param user user, Object of KitabooUser.
///
/// \param baseURLString baseURLString,  Base URL String.
///
/// \param clientID clientID,  Client Id.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param timeStamp timeStamp,  Time Stamp.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (nonnull instancetype)initWithKitabooUser:(KitabooUser * _Nonnull)user baseURLString:(NSString * _Nonnull)baseURLString microServicesURL:(NSString * _Nonnull)microServicesURL clientID:(NSString * _Nonnull)clientID bookId:(NSNumber * _Nonnull)bookId timeStamp:(NSNumber * _Nonnull)timeStamp thumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookISBN:(NSString * _Nullable)bookISBN enableCDNCookies:(BOOL)enable additionalInfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalInfo OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// To update the HDKitabooMediaBookReader object
/// This method should be called to update the HDKitabooMediaBookReader object where the extension can be m3u8/mp3/mp4 etc.
/// \param mediaBookPath mediaBookPath is the path of the Media to be played.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (void)updateMediaReaderWithBookPath:(NSString * _Nullable)mediaBookPath mediaThumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookId:(NSString * _Nullable)bookId bookISBN:(NSString * _Nullable)bookISBN additionalinfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalinfo;
/// To update the HDKitabooMediaBookReader object
/// This method should be called to update the HDKitabooMediaBookReader object.
/// NOTE : This method will only be used for HLS downloaded book where <code>metaDataPath</code> will be the path where all the additional data of Media Book will be downloaded i.e. Media images, TOC etc.
/// \param path path will be the path where all the additional data of Media Book will be downloaded i.e. Media images, TOC etc.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param bookId bookId,  MediaBook bookId. Note : - It is a mandatory parameter and, It is the same asset name which is used to download the media.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (void)updateMediaReaderWithMetaDataPath:(NSString * _Nullable)path mediaThumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookISBN:(NSString * _Nullable)bookISBN bookId:(NSString * _Nullable)bookId additionalinfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalinfo;
/// To update the HDKitabooMediaBookReader object.
/// This method should be called to update the HDKitabooMediaBookReader object. This method only be called for HLS Online Media Books where user is not having the m3u8 path.
/// \param user user, Object of KitabooUser.
///
/// \param baseURLString baseURLString,  Base URL String.
///
/// \param clientID clientID,  Client Id.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param timeStamp timeStamp,  Time Stamp.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (void)updateMediaReaderWithKitabooUser:(KitabooUser * _Nonnull)user baseURLString:(NSString * _Nonnull)baseURLString microServicesURL:(NSString * _Nonnull)microServicesURL clientID:(NSString * _Nonnull)clientID bookId:(NSNumber * _Nonnull)bookId timeStamp:(NSNumber * _Nonnull)timeStamp thumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookISBN:(NSString * _Nullable)bookISBN enableCDNCookies:(BOOL)enable additionalinfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalinfo;
/// To set the theme color to various components of the views/controllers related to MediaBook
/// This method should be called to set the color to various components of the views/controllers related to MediaBook. The colors will be fetched from the json provided. If this method is not called, then the default colors will be applied to UI components
/// \param themeVO themeVO is the HDKitabooMediaBookThemeVO instance.If this object is not set, then the default colors will be applied to UI components
///
- (void)setTheme:(HDKitabooMediaBookThemeVO * _Nullable)themeVO;
/// To enable/disable the Bookmark Feature in AudioBook Player
/// This method should be called to enable/disable the Bookmark Feature in AudioBook Player.If this method is not called then by default the Bookmark Feature will be enabled.
/// \param enable enable is a boolean.If this boolean is set as false, then Bookmark Feature will be disabled and vice versa.
///
- (void)enableBookmark:(BOOL)enable;
/// To set the bookmarks
/// This method should be called to set the bookmarks
/// \param bookmarkArray bookmarkArray is a NSArray object.It should be an array of SDKBookmarkVO objects
///
- (void)setBookmarks:(NSArray * _Nonnull)bookmarkArray;
/// To set start time of the AudioBook
/// This method should be called to set the start time of the AudioBook when where the initial narration should start from
/// \param time It should be the start time of AudioBook.It is an Int value
///
- (void)setStartTime:(NSDictionary * _Nonnull)metaData;
/// To enable next previous feature for media books.
/// \param enabled A Book Value
///
- (void)enableNextPreviousFeature:(BOOL)enabled;
/// To enable next previous feature for media books.
/// \param enabled A Book Value
///
- (void)setNextPreviousBookIds:(NSArray<NSNumber *> * _Nonnull)bookIds;
/// To load HLS Media Book Path and play the Media.
/// This method only be called for HLS Online Media Books where user is not having the m3u8 path.
/// \param user user, Object of KitabooUser.
///
/// \param baseURLString baseURLString,  Base URL String.
///
/// \param clientID clientID,  Client Id.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param timeStamp timeStamp,  Time Stamp.
///
/// \param launchMedia launchMedia,  A Boolean value which means after loading the media book path, the media player should be launched or not.
///
- (void)loadHLSMediaBookPathForUser:(KitabooUser * _Nonnull)kitabooUser baseURLString:(NSString * _Nonnull)baseURLString clientID:(NSString * _Nonnull)clientID microServicesURL:(NSString * _Nonnull)microServicesURL bookId:(NSNumber * _Nonnull)bookId timeStamp:(NSNumber * _Nonnull)timeStamp shouldLaunchMedia:(BOOL)launchMedia;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)didTapOnBookmark;
- (void)didTapOnNarrationSpeed:(UIButton * _Nonnull)button;
- (void)didTapOnForward;
- (void)didTapOnRewind;
- (void)didTapOnNextChapter;
- (void)didTapOnPreviousChapter;
- (void)didSeekBarValueChanged;
- (void)didTapOnPlayPause:(HDMediaBookModel * _Nonnull)mediaBookModel;
- (UIImageView * _Nullable)imageViewForThumbnail:(NSString * _Nonnull)thumbnailURL SWIFT_WARN_UNUSED_RESULT;
- (void)didNarrationSpeedValueChanges:(HDMediaBookModel * _Nullable)mediaBookModel;
- (void)didTapOnCancel;
- (void)didTapOnAddBookmark:(SDKBookmarkVO * _Nonnull)bookmarkVO;
- (void)didTapOnDeleteBookmark:(SDKBookmarkVO * _Nonnull)bookmarkVO;
- (void)didTapOnCancelBookmark:(SDKBookmarkVO * _Nullable)bookmarkVO;
- (void)didTapOnChapterSegment;
- (void)didTapOnTranscriptSegment;
- (void)didTapOnBookmarkSegment;
- (void)didTapOnChapter:(HDMediaBookChapterVO * _Nonnull)chapterModel;
- (void)didTapOnTranscript:(HDMediaBookTranscriptVO * _Nonnull)chapterModel;
- (void)didTapOnBookmark:(SDKBookmarkVO * _Nonnull)bookmarkVO;
- (void)didTapOnChapterPlayPause:(HDMediaBookModel * _Nonnull)mediaBookModel;
- (void)didTapOnBookmarkDelete:(SDKBookmarkVO * _Nonnull)bookmarkVO;
- (void)playerPlayingWithCurrentTime:(NSInteger)currentTime totalTime:(NSInteger)totalTime;
- (void)playerDidFinishPlaying;
- (void)playerFailedToPlayWithError:(NSError * _Nonnull)error;
- (void)playerDidChangeStateWithMediaBookModel:(HDMediaBookModel * _Nonnull)mediaBookModel;
/// It will return a Dictionary which will contains all the information about a media book, i.e. Media book current time, folio ID etc.
- (NSDictionary * _Nonnull)getMetaData SWIFT_WARN_UNUSED_RESULT;
/// A method to close media book Player.
- (void)closePlayer;
- (void)didTapOnVideoView:(BOOL)enableControls;
- (void)didTapOnVideoFullScreen:(BOOL)isFullScreen;
- (void)didTapOnVideoMute:(BOOL)isMute;
- (void)didTapOnVideoBack;
- (void)didTapOnVideoBookmark;
- (void)didTapOnVideoNarrationSpeed:(UIButton * _Nonnull)button;
- (void)didTapOnVideoRewind;
- (void)didTapOnVideoForward;
- (void)didTapOnVideoPlayPause:(HDMediaBookModel * _Nonnull)mediaBookModel;
- (void)didTapOnVideoNextChapter;
- (void)didTapOnVideoPreviousChapter;
- (void)didVideoSeekBarValueChanged;
- (void)didTapOnSubtitleView:(BOOL)enabled;
- (void)didTapOnVideoMoreOptions:(UIView * _Nonnull)view;
- (void)didRemoveSleepTimerView;
- (void)didSetAudioSleepTimerWithSelectedSleepTime:(NSTimeInterval)selectedSleepTime selectedSleepAction:(enum SleepAction)selectedSleepAction;
- (void)didSetAudioSleepTimerOff;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

/// An Object to get media book asset type, whether it is Audio or Video.
typedef SWIFT_ENUM(NSInteger, MediaBookType, open) {
  MediaBookTypeKMediaBookAudio = 0,
  MediaBookTypeKMediaBookVideo = 1,
};



@interface HDKitabooMediaBookReader (SWIFT_EXTENSION(KitabooSDKWithReader)) <HDKitabooMediaPopOverControllerDelegate>
- (void)didTapOnItem:(NSString * _Nonnull)itemTitle;
- (void)didTapOnCancelItem;
- (void)didChangeSwitchState:(BOOL)isOn;
@end



@interface HDKitabooMediaBookReader (SWIFT_EXTENSION(KitabooSDKWithReader))
/// A method to enable/disable media Book next media Button UI.
- (void)disableNextMediaButton:(BOOL)disable;
/// A method to enable/disable media Book previous media Button UI.
- (void)disablePreviousMediaButton:(BOOL)disable;
/// A method to hide/unhide media Book next/previous media Button UI.
- (void)hideNextPreviousControls:(BOOL)hide;
@end


/// The delegate of a HDKitabooMediaBookReader object must adopt the HDKitabooMediaBookReaderDelegate protocol.
/// HDKitabooMediaBookReaderDelegate Protocol used to handle all the callbacks of HDKitabooMediaBookReader Class.The HDKitabooMediaBookReaderDelegate protocol defines methods to provide callback when user perform any action on HDKitabooMediaBookReader.
/// When configuring the HDKitabooMediaBookReader object, assign your delegate object to its delegate property.
SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader32HDKitabooMediaBookReaderDelegate_")
@protocol HDKitabooMediaBookReaderDelegate
@optional
/// Delegate method when tapped on back button
/// This method will be called when user tap on the back button
- (void)didTapOnBack:(NSDictionary * _Nonnull)additionalInfo mediaBookReader:(HDKitabooMediaBookReader * _Nonnull)mediaBookReader;
/// Delegate method to update the thumbnail image
/// This method will be called to set the thumbnail image.User need to return UIImageView after setting the image from thumbnailURL.If the UIImageView is not returned then SDK will load the image itself.
/// UIImageView is not returned then
/// \param thumbnailURL thumbnailURL is the image URL String.thumbnailURL is the url of the image that needs to be displayed
///
- (UIImageView * _Nullable)imageViewForThumbnail:(NSString * _Nonnull)thumbnailURL SWIFT_WARN_UNUSED_RESULT;
/// Delegate method when bookmark is created/deleted
/// This method will be called when the bookmark is created/deleted
/// \param bookmarkVO is the SDKBookmarkVO object. 
///
- (void)didBookmarkCompleteWithBookmarkVO:(SDKBookmarkVO * _Nonnull)bookmarkVO;
/// Delegate method which will be called for every 10 seconds.
/// This method will be called for every 10 seconds.
/// \param additionalInfo is the Dictionary object which actually contains the details such as currentTime, ChapterName , FolioID and the fileName of the Audio. 
///
- (void)didSchedulerCalledWithInfo:(NSDictionary * _Nonnull)additionalInfo;
/// Delegate method will be called when HLS Online media url service gets failed.
/// \param error is the error for which HLS Media gets failed. 
///
/// \param bookId is the bookId for which HLS Media gets failed. 
///
/// \param timeStamp is the time stampe  for which HLS Media gets failed. 
///
- (void)didHLSMediaServiceFailWithError:(NSError * _Nonnull)error bookId:(NSNumber * _Nonnull)bookId timeStamp:(NSNumber * _Nonnull)timeStamp;
/// Delegate method will be called when HLS Online media URL service gets called successfully.
/// \param mediaPath is the mediaPath which is loaded. 
///
/// \param bookId is the bookId for which mediaPath is loaded. 
///
- (void)didHLSMediaServiceCallSuccessfullyWithMediaPath:(NSString * _Nonnull)mediaPath withBookID:(NSNumber * _Nonnull)bookId;
/// Delegate method will be called every time whenever media state(Play/Pause) is changed.
/// \param mediaState is the changed state of the media. 
///
- (void)didMediaPlaybackStateChange:(NSString * _Nonnull)mediaState;
/// Delegate method when user taps on Next media button.
/// This method will be called when user taps on Next media button.
- (void)didTapOnNextMediaButton:(HDKitabooMediaBookReader * _Nonnull)mediaPlayer;
/// Delegate method when user taps on user taps on Previous media button.
/// This method will be called when user taps on Previous media button.
- (void)didTapOnPreviousMediaButton:(HDKitabooMediaBookReader * _Nonnull)mediaPlayer;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader16HDLanguageBundle")
@interface HDLanguageBundle : NSBundle
- (NSString * _Nonnull)localizedStringForKey:(NSString * _Nonnull)key value:(NSString * _Nullable)value table:(NSString * _Nullable)tableName SWIFT_WARN_UNUSED_RESULT;
+ (void)setApplicationLanguage:(NSString * _Nonnull)language;
- (nullable instancetype)initWithPath:(NSString * _Nonnull)path OBJC_DESIGNATED_INITIALIZER;
@end

@protocol HDReadToMeViewControllerDelegates;
enum ReadAloudMode : NSInteger;
@class UIGestureRecognizer;
@class UITouch;

SWIFT_CLASS("_TtC20KitabooSDKWithReader24HDReadToMeViewController")
@interface HDReadToMeViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, strong) id <HDReadToMeViewControllerDelegates> _Nullable delegate;
- (nonnull instancetype)initWithReadAloudMode:(enum ReadAloudMode)mode OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (void)setTheme:(KBHDThemeVO * _Nonnull)themeVO;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader33HDReadToMeViewControllerDelegates_")
@protocol HDReadToMeViewControllerDelegates
- (void)didCloseReadToMeView;
- (void)didTapOnReadToMeForReadAloud;
- (void)didTapOnAutoPlayForReadAloud;
- (void)didTapOnLetMeReadForReadAloud;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader24HDReaderServiceConstants")
@interface HDReaderServiceConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode200;)
+ (NSString * _Nonnull)responseStatusCode200 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode600;)
+ (NSString * _Nonnull)responseStatusCode600 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode400;)
+ (NSString * _Nonnull)responseStatusCode400 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode103;)
+ (NSString * _Nonnull)responseStatusCode103 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode202;)
+ (NSString * _Nonnull)responseStatusCode202 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode426;)
+ (NSString * _Nonnull)responseStatusCode426 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode204;)
+ (NSString * _Nonnull)responseStatusCode204 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode800;)
+ (NSString * _Nonnull)responseStatusCode800 SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader31HDScreenCaptureResistController")
@interface HDScreenCaptureResistController : UIViewController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)resistScreenCapture;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader31HDSpeedSelectionOptionsDelegate_")
@protocol HDSpeedSelectionOptionsDelegate
- (void)speedOptionSelectedWithOption:(NSInteger)option;
@end

@class UIColor;

SWIFT_CLASS("_TtC20KitabooSDKWithReader27HDSpeedSelectionOptionsView")
@interface HDSpeedSelectionOptionsView : UIView
@property (nonatomic, strong) id <HDSpeedSelectionOptionsDelegate> _Nullable delegate;
@property (nonatomic, strong) UIColor * _Nonnull iconColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setTheme;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader23HDTranslationController")
@interface HDTranslationController : UIViewController
@property (nonatomic, copy) NSString * _Nullable googleAPIKey;
- (nonnull instancetype)initWithHighlightText:(NSString * _Nonnull)highlightText kbthemeVO:(KBHDThemeVO * _Nonnull)kbthemeVO;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader12HelpDelegate_")
@protocol HelpDelegate
- (void)swipeAtIndex:(NSInteger)index;
- (void)didRemovedHelpScreen;
@end

@class UILabel;

SWIFT_CLASS("_TtC20KitabooSDKWithReader14HelpDescriptor")
@interface HelpDescriptor : NSObject
@property (nonatomic) BOOL onSecondScreen;
- (nonnull instancetype)initWithIcon:(UILabel * _Nonnull)icon helpTitle:(NSString * _Nonnull)helpTitle helpText:(NSString * _Nonnull)helpText tagName:(NSString * _Nonnull)tagName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader10HelpScreen")
@interface HelpScreen : UIViewController
@property (nonatomic, copy) NSArray<HelpDescriptor *> * _Nonnull helpDescriptors;
@property (nonatomic) BOOL showSecondScreen;
@property (nonatomic) BOOL isForTeacherReview;
@property (nonatomic) BOOL isForBookShelf;
@property (nonatomic) BOOL isForFirstTime;
@property (nonatomic) BOOL isOnSecondScreenOnHelpScreen;
@property (nonatomic, weak) id <HelpDelegate> _Nullable delegate;
- (void)setBackGroundColorWithColor:(NSString * _Nonnull)color;
- (void)setLineColorWithColor:(NSString * _Nonnull)color;
- (void)setEllipseColorWithColor:(NSString * _Nonnull)color;
- (void)setIconColorWithColor:(NSString * _Nonnull)color;
- (void)setTitleTextColorWithColor:(NSString * _Nonnull)color;
- (void)setDescriptionTextColorWithColor:(NSString * _Nonnull)color;
- (void)setGotItButtonBackgroundColorWithColor:(NSString * _Nonnull)color;
- (void)setGotItButtonTextColorWithColor:(NSString * _Nonnull)color;
- (void)setSkipButtonBackgroundColorWithColor:(NSString * _Nonnull)color;
- (void)setSkipButtonTextColorWithColor:(NSString * _Nonnull)color;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)setUpViews;
- (void)swipeToLeft;
- (void)swipeToRight;
- (void)removeViews;
- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSLayoutConstraint;

SWIFT_CLASS("_TtC20KitabooSDKWithReader17HighLightToolView")
@interface HighLightToolView : UIView
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified iconLabel;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified contentView;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified widthConstraintOfIcon;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified heightConstraintOfIcon;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified widthConstraintOfBorderView;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified heightConstraintOfBorderView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified borderView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)resetViewForColorPalletWithColorHeight:(CGFloat)colorHeight;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSMutableArray;
@class UIStackView;

SWIFT_CLASS("_TtC20KitabooSDKWithReader13HighlightView")
@interface HighlightView : HighlightActionView
@property (nonatomic, copy) void (^ _Nullable highLightToolActions)(HighLightToolView * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable highlightTextAction)(HighLightToolView * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) NSString * _Null_unspecified selectedColorStr;
@property (nonatomic, strong) NSMutableArray * _Null_unspecified highlighColorsArray;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified horizontalColorsStackConstraint;
@property (nonatomic, weak) IBOutlet UIStackView * _Null_unspecified horizontalStackForHighLightTools;
@property (nonatomic, weak) IBOutlet UIStackView * _Null_unspecified horizontalStackForColors;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified contentView;
- (nonnull instancetype)initWithFrame:(CGRect)frame selectedColor:(NSString * _Nonnull)selectedColor selectedBorderColor:(UIColor * _Nonnull)selectedBorderColor OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addHighLightToolbuttonWithHighLightTool:(UIView * _Nonnull)highLightTool;
- (void)resetHighlightView;
- (void)addColorViewWithHightlighColorView:(UIView * _Nonnull)hightlighColorView color:(NSString * _Nonnull)color;
- (void)addShowHideHightLightsViewWithHighLightTool:(UIView * _Nonnull)highLightTool;
- (void)changeHighLightToolButtonIconWithIconText:(NSString * _Nonnull)iconText highlightItemType:(HighlightItemType)highlightItemType;
- (null_unspecified instancetype)initWithItemSize:(CGSize)itemSize SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NError;

SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader23ImmersiveReaderDelegate_")
@protocol ImmersiveReaderDelegate
- (void)didExitImmersiveReader;
- (void)didFinishLaunching:(NError * _Nullable)error;
@end

@class Options;

SWIFT_CLASS("_TtC20KitabooSDKWithReader29ImmersiveReaderViewController")
@interface ImmersiveReaderViewController : UIViewController
- (nullable instancetype)initWithToken:(NSString * _Nonnull)token subdomain:(NSString * _Nonnull)subdomain content:(Content * _Nonnull)content options:(Options * _Nullable)options delegate:(id <ImmersiveReaderDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class WKUserContentController;
@class WKScriptMessage;

@interface ImmersiveReaderViewController (SWIFT_EXTENSION(KitabooSDKWithReader)) <WKScriptMessageHandler>
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
@end

@class WKWebView;
@class WKNavigation;

@interface ImmersiveReaderViewController (SWIFT_EXTENSION(KitabooSDKWithReader)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
@end

@class WKWebViewConfiguration;

SWIFT_CLASS("_TtC20KitabooSDKWithReader22ImmersiveReaderWebView") SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface ImmersiveReaderWebView : WKWebView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame configuration:(WKWebViewConfiguration * _Nonnull)configuration SWIFT_UNAVAILABLE;
@end

enum PrintType : NSInteger;
@protocol KBMyDataPrintOptionsControllerDelegate;

SWIFT_CLASS("_TtC20KitabooSDKWithReader30KBMyDataPrintOptionsController")
@interface KBMyDataPrintOptionsController : UIViewController
@property (nonatomic, strong) KBHDThemeVO * _Null_unspecified kbthemeVO;
@property (nonatomic) enum PrintType hiddenPrintType;
@property (nonatomic, weak) id <KBMyDataPrintOptionsControllerDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface KBMyDataPrintOptionsController (SWIFT_EXTENSION(KitabooSDKWithReader)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface KBMyDataPrintOptionsController (SWIFT_EXTENSION(KitabooSDKWithReader)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader38KBMyDataPrintOptionsControllerDelegate_")
@protocol KBMyDataPrintOptionsControllerDelegate
- (void)didTapOnPrintTypeWithPrintType:(enum PrintType)printType;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader26KitabooReaderEventConstant")
@interface KitabooReaderEventConstant : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bookmarkEventName;)
+ (NSString * _Nonnull)bookmarkEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull pentoolEventName;)
+ (NSString * _Nonnull)pentoolEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull protractorEventName;)
+ (NSString * _Nonnull)protractorEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull equationEditorEventName;)
+ (NSString * _Nonnull)equationEditorEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull readAloudEventName;)
+ (NSString * _Nonnull)readAloudEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull homeButtonEventName;)
+ (NSString * _Nonnull)homeButtonEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull tocEventName;)
+ (NSString * _Nonnull)tocEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull thumbnailEventName;)
+ (NSString * _Nonnull)thumbnailEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull teacherReviewEventName;)
+ (NSString * _Nonnull)teacherReviewEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontResetEventName;)
+ (NSString * _Nonnull)fontResetEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull highlightEventName;)
+ (NSString * _Nonnull)highlightEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull highlightEventParameterNoteColor;)
+ (NSString * _Nonnull)highlightEventParameterNoteColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull stickyNoteEventName;)
+ (NSString * _Nonnull)stickyNoteEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull stickyNoteEventParameterNoteColor;)
+ (NSString * _Nonnull)stickyNoteEventParameterNoteColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contextualNoteEventName;)
+ (NSString * _Nonnull)contextualNoteEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contextualNoteEventParameterNoteColor;)
+ (NSString * _Nonnull)contextualNoteEventParameterNoteColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull searchEventName;)
+ (NSString * _Nonnull)searchEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull searchEventParameterSearchText;)
+ (NSString * _Nonnull)searchEventParameterSearchText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontFamilyEventName;)
+ (NSString * _Nonnull)fontFamilyEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontFamilyEventParameterFontValue;)
+ (NSString * _Nonnull)fontFamilyEventParameterFontValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontSizeEventName;)
+ (NSString * _Nonnull)fontSizeEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontSizeEventParameterFontSizeValue;)
+ (NSString * _Nonnull)fontSizeEventParameterFontSizeValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontAlignmentDataEventName;)
+ (NSString * _Nonnull)fontAlignmentDataEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontAlignmentDataEventParameterFontAlignment;)
+ (NSString * _Nonnull)fontAlignmentDataEventParameterFontAlignment SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontLineSpacingEventName;)
+ (NSString * _Nonnull)fontLineSpacingEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontLineSpacingEventParameterFontLineSpacing;)
+ (NSString * _Nonnull)fontLineSpacingEventParameterFontLineSpacing SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontMarginDataEventName;)
+ (NSString * _Nonnull)fontMarginDataEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontMarginDataEventParameterFontMarginData;)
+ (NSString * _Nonnull)fontMarginDataEventParameterFontMarginData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontReadingModeEventName;)
+ (NSString * _Nonnull)fontReadingModeEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontReadingModeEventParameterFontReadingMode;)
+ (NSString * _Nonnull)fontReadingModeEventParameterFontReadingMode SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontScrollViewEventName;)
+ (NSString * _Nonnull)fontScrollViewEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontScrollViewEventParameterFontScrollView;)
+ (NSString * _Nonnull)fontScrollViewEventParameterFontScrollView SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventName;)
+ (NSString * _Nonnull)markupEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventParameterKey;)
+ (NSString * _Nonnull)markupEventParameterKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventNormalVideoParameterValue;)
+ (NSString * _Nonnull)markupEventNormalVideoParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventYoutubeVideoParameterValue;)
+ (NSString * _Nonnull)markupEventYoutubeVideoParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventInlineVideoParameterValue;)
+ (NSString * _Nonnull)markupEventInlineVideoParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventDocumentParameterValue;)
+ (NSString * _Nonnull)markupEventDocumentParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventKitabooWidgetParameterValue;)
+ (NSString * _Nonnull)markupEventKitabooWidgetParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventHTMLActivityParameterValue;)
+ (NSString * _Nonnull)markupEventHTMLActivityParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventWebLinkParameterValue;)
+ (NSString * _Nonnull)markupEventWebLinkParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventScormParameterValue;)
+ (NSString * _Nonnull)markupEventScormParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventFIBParameterValue;)
+ (NSString * _Nonnull)markupEventFIBParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventKalturaVideoParameterValue;)
+ (NSString * _Nonnull)markupEventKalturaVideoParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventImageParameterValue;)
+ (NSString * _Nonnull)markupEventImageParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventImageSlideShowParameterValue;)
+ (NSString * _Nonnull)markupEventImageSlideShowParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventInstructionMarkupParameterValue;)
+ (NSString * _Nonnull)markupEventInstructionMarkupParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventAudioSyncParameterValue;)
+ (NSString * _Nonnull)markupEventAudioSyncParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventAudioParameterValue;)
+ (NSString * _Nonnull)markupEventAudioParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventGotoPageParameterValue;)
+ (NSString * _Nonnull)markupEventGotoPageParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventMultilinkMarkupParameterValue;)
+ (NSString * _Nonnull)markupEventMultilinkMarkupParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventDropDownParameterValue;)
+ (NSString * _Nonnull)markupEventDropDownParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventJumpToBookParameterValue;)
+ (NSString * _Nonnull)markupEventJumpToBookParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventImageMagnificationParameterValue;)
+ (NSString * _Nonnull)markupEventImageMagnificationParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull highLightPopUpEventName;)
+ (NSString * _Nonnull)highLightPopUpEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull highLightPopUpEventImmersiveReader;)
+ (NSString * _Nonnull)highLightPopUpEventImmersiveReader SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface LocalizationHelper (SWIFT_EXTENSION(KitabooSDKWithReader))
+ (NSString * _Nonnull)localizedStringWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader14LocalizeHelper")
@interface LocalizeHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LocalizeHelper * _Nonnull shared;)
+ (LocalizeHelper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setLanguage:(NSString * _Nonnull)lang;
- (NSString * _Nonnull)localizedStringForKey:(NSString * _Nullable)key SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)localizedStringForKey:(NSString * _Nullable)key tableName:(NSString * _Nonnull)tableName bundle:(NSBundle * _Nonnull)bundle SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader6NError")
@interface NError : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader7Options")
@interface Options : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PrintType, open) {
  PrintTypeBoth = 0,
  PrintTypeHighlights = 1,
  PrintTypeNotes = 2,
  PrintTypeNone = 3,
};


SWIFT_CLASS("_TtC20KitabooSDKWithReader27RTLorLTRFlowLayoutForReader")
@interface RTLorLTRFlowLayoutForReader : UICollectionViewFlowLayout
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;
@end

typedef SWIFT_ENUM(NSInteger, ReadAloudMode, open) {
  ReadAloudModeLetMeRead = 1,
  ReadAloudModeReadToMe = 2,
  ReadAloudModeAutoPlay = 3,
};


SWIFT_CLASS("_TtC20KitabooSDKWithReader16ReadAloudOptions")
@interface ReadAloudOptions : NSObject
- (nonnull instancetype)initWithVoice:(NSString * _Nonnull)voice speed:(NSInteger)speed autoplay:(BOOL)autoplay OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader22ResetAllViewController")
@interface ResetAllViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, copy) void (^ _Nullable OkButtonAction)(BOOL);
@property (nonatomic, copy) void (^ _Nullable CancelButtonAction)(void);
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSMutableDictionary;

SWIFT_CLASS("_TtC20KitabooSDKWithReader14TOCContentCell")
@interface TOCContentCell : UITableViewCell
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified barView;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified downArrowButton;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified cellLeadConstraint;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified dataLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified levelLabel;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified seperatorSuperviewLeadingConstraint;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified seperatorConstraintFromLevelLabel;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified seperatorView;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified widthConstraintOflevelLabel;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified sectionHeaderButton;
- (void)awakeFromNib;
- (void)configureViewForTocWithDataDictionary:(NSMutableDictionary * _Nonnull)dataDictionary themeVO:(KBHDThemeVO * _Nonnull)themeVO;
- (void)configureViewForStandardsWithDataDictionary:(NSMutableDictionary * _Nonnull)dataDictionary themeVO:(KBHDThemeVO * _Nonnull)themeVO;
- (void)configureViewForExternalResourcesWithDataDictionary:(NSMutableDictionary * _Nonnull)dataDictionary themeVO:(KBHDThemeVO * _Nonnull)themeVO;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader16TOCTableViewCell")
@interface TOCTableViewCell : UITableViewCell
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified pageLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified dataLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified timeLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified bookmarkLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified barLabel;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified cellLeadConstraint;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified timeLabelBottomConstarint;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified verticalCenterConstarint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified bookmarkTrailingConstraint;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified seperatorViewForHeaderView;
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol TOCViewControllerDelegate;
@class HDReaderSettingModel;
@class KitabooBookVO;

SWIFT_CLASS("_TtC20KitabooSDKWithReader17TOCViewController")
@interface TOCViewController : UIViewController <UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, strong) NSLayoutConstraint * _Nonnull headerHeightConstraint;
@property (nonatomic, strong) NSMutableArray * _Nonnull _resourceArray;
@property (nonatomic) BOOL isExternalResourceAvailable;
@property (nonatomic, strong) id <TOCViewControllerDelegate> _Nullable _delegate;
@property (nonatomic) BookOrientationMode bookOrientation;
@property (nonatomic, strong) HDReaderSettingModel * _Nonnull userSettingsModel;
@property (nonatomic, strong) KitabooUser * _Nullable user;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithThemeVO:(KBHDThemeVO * _Nonnull)themeVO book:(KitabooBookVO * _Nonnull)book chapter:(NSInteger)chapter activePage:(NSArray * _Nonnull)activePage bookMarkDataArray:(NSArray * _Nonnull)bookMarkDataArray resourceDataArray:(NSMutableArray * _Nullable)resourceDataArray tocDataArray:(NSArray * _Nonnull)tocDataArray standardResourceArray:(NSArray * _Nonnull)standardResourceArray OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithThemeVO:(KBHDThemeVO * _Nonnull)themeVO book:(KitabooBookVO * _Nonnull)book chapter:(NSInteger)chapter chapterName:(NSString * _Nonnull)chapterName activePage:(NSArray * _Nonnull)activePage bookMarkDataArray:(NSArray * _Nonnull)bookMarkDataArray resourceDataArray:(NSMutableArray * _Nullable)resourceDataArray tocDataArray:(NSArray * _Nonnull)tocDataArray standardResourceArray:(NSArray * _Nonnull)standardResourceArray OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setDataWithData:(NSArray * _Nonnull)data;
- (void)viewDidLayoutSubviews;
- (void)actionForButtonWithSender:(UIButton * _Nonnull)sender;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)didSelectSectionWithSender:(UIButton * _Nonnull)sender;
- (void)navigateToPageWithDict:(NSDictionary * _Nonnull)dict;
- (void)didSelectDropdownForSectionWithSender:(UIButton * _Nonnull)sender;
- (void)didSelectCellDropDownButtonWithSender:(UIButton * _Nonnull)sender;
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (void)setStandardDataWithData:(NSArray * _Nonnull)data;
- (void)setExternalResourcesDataWithData:(NSArray * _Nonnull)data;
- (void)didReceiveMemoryWarning;
- (NSString * _Nonnull)getLocalizedStringFor:(NSString * _Nonnull)displayDateString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class KFLinkVO;
@class EPUBResource;

SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader25TOCViewControllerDelegate_")
@protocol TOCViewControllerDelegate
- (void)didSelectActionToCloseTOC;
- (void)navigateToPageWithPageId:(NSString * _Nonnull)pageId;
- (void)actionForLinkWithLinkVO:(KFLinkVO * _Nonnull)linkVO;
- (void)actionForResource:(EPUBResource * _Nonnull)resource;
- (void)didSelectTEKSStandard;
- (void)didSelectELPSStandard;
- (void)didLoadWebLinkForStandardsWithWebLink:(NSString * _Nonnull)webLink;
- (NSArray * _Nonnull)didSelectInternalResources SWIFT_WARN_UNUSED_RESULT;
- (void)didSelectExternalResources;
- (void)didLoadWebLinkForExternalResourcesWithWebLink:(NSString * _Nonnull)webLink;
- (void)didSelectActionToJumpToBookWithBookID:(NSString * _Nonnull)bookID;
- (void)sessionExpiredOnTOC;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader36TeacherReviewClassListViewController")
@interface TeacherReviewClassListViewController : UIViewController <UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, copy) void (^ _Nullable RemoveAnnotataionController)(void);
@property (nonatomic, copy) void (^ _Nullable DidSelectClassName)(NSString * _Nonnull, NSArray * _Nonnull);
- (void)viewDidLoad;
- (void)setClassesWithClassesInfoArray:(NSArray * _Nonnull)classesInfoArray;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (void)closeViewController;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UISwitch;
@class UITextField;
@class SDKPentoolVO;
@class SDKFIBVO;

SWIFT_CLASS("_TtC20KitabooSDKWithReader27TeacherReviewViewController")
@interface TeacherReviewViewController : UIViewController <UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
@property (nonatomic, copy) NSString * _Nullable selectedLearnerImageUrl;
@property (nonatomic, copy) NSString * _Nullable selectedLearnerName;
@property (nonatomic, copy) NSString * _Nullable selectedLearnerID;
@property (nonatomic, copy) NSString * _Nullable SelectedPageIdentifier;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable studentPageUGCDictionary;
@property (nonatomic, copy) NSString * _Nullable selectedClassName;
@property (nonatomic) BOOL isAnnotationEnabled;
@property (nonatomic, strong) NSArray * _Nullable studentSubmittedPageArray;
@property (nonatomic, strong) KBHDThemeVO * _Nullable themeVo;
@property (nonatomic, strong) NSArray * _Nullable selectedFibArray;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull studentDataDict;
@property (nonatomic, copy) void (^ _Nullable RemoveAnnotataionController)(void);
@property (nonatomic, copy) void (^ _Nullable DidTapOnChangeClassButton)(void);
@property (nonatomic, copy) void (^ _Nullable FetchEachLearnerData)(NSString * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable LearnerSelectionAction)(NSArray * _Nonnull, NSString * _Nonnull);
- (void)viewDidLoad;
- (void)annotationSwitchChanged:(UISwitch * _Nonnull)sender;
- (void)mainViewTapped;
- (BOOL)textFieldShouldClear:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doesCurrentPageHaveActiveUGC SWIFT_WARN_UNUSED_RESULT;
- (NSArray * _Nonnull)getPenToolUGCForPageIdentifier:(NSString * _Nonnull)pageIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSArray * _Nonnull)getFIBUGCForPageIdentifier:(NSString * _Nonnull)pageIdentifier SWIFT_WARN_UNUSED_RESULT;
- (void)updatePenDrawing:(SDKPentoolVO * _Nonnull)penDrawing;
- (void)updateFIBData:(SDKFIBVO * _Nonnull)fibVO;
- (void)addPenDrawing:(SDKPentoolVO * _Nonnull)penDrawing;
- (SDKFIBVO * _Nullable)getSDKFIBVOWithUgcId:(NSString * _Nonnull)ugcId SWIFT_WARN_UNUSED_RESULT;
- (NSArray * _Nonnull)getAnotationToSave SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEditingAllowedForLinkID:(NSInteger)linkId SWIFT_WARN_UNUSED_RESULT;
- (SDKFIBVO * _Nullable)getSDKFIBVOForLinkID:(NSInteger)linkId SWIFT_WARN_UNUSED_RESULT;
- (void)clearAllFIBsForPageID:(NSString * _Nonnull)pageId;
- (void)clearAllPenDrawingsForPageID:(NSString * _Nonnull)pageId;
- (void)clearAllFIBs;
- (void)clearAllPenDrawings;
- (BOOL)isFIBsAndPentoolAvailableOnPageID:(NSString * _Nonnull)pageId SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isFIBsAndPentoolAvailable SWIFT_WARN_UNUSED_RESULT;
- (void)startActivityIndicator;
- (void)stopActivityIndicator;
- (void)setDataWithClassName:(NSString * _Nonnull)className studentList:(NSArray * _Nonnull)studentList;
- (void)serviceFailedWithLearnerID:(NSString * _Nonnull)learnerId;
- (void)setSubmittedStudentUGCArray:(NSDictionary<NSString *, id> * _Nonnull)studentDataDictionary;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (void)backButtonTapped;
- (void)jumpToNextStudent;
- (void)jumpToPreviousStudent;
- (BOOL)isAvailableNextStudent SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isAvailablePreviousStudent SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getStudentCount SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getStudentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)changeClassButtonTapped;
- (void)closeViewController;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class RendererViewController;
@class PlayerActionBarItem;

SWIFT_CLASS("_TtC20KitabooSDKWithReader24TextAnnotationActionView")
@interface TextAnnotationActionView : PlayerActionBar
@property (nonatomic, strong) NSLayoutConstraint * _Nonnull textAnnotationBottomMarginConstraint;
@property (nonatomic) BOOL isTextAnnotationAvailable;
@property (nonatomic) BOOL isTextAnnotationKeyboardAvailable;
@property (nonatomic) NSInteger numberOfItems;
- (void)addPlayerBottomBarForTextAnnotationWithParentView:(UIView * _Nonnull)parentView hdThemeVO:(KBHDThemeVO * _Nonnull)hdThemeVO bookType:(KitabooBookVO * _Nonnull)bookType renderer:(RendererViewController * _Nonnull)renderer;
- (PlayerActionBarItem * _Nullable)getTextAnnotationViewItemWithTag:(NSInteger)penToolBarItemType SWIFT_WARN_UNUSED_RESULT;
- (void)updateSelectedLabelItemWithIsSelected:(BOOL)isSelected themeVO:(KBHDThemeVO * _Nonnull)themeVO tag:(NSInteger)tag;
- (void)updateTextAnnotationSaveItemWithIsTextAvailable:(BOOL)isTextAvailable themeVO:(KBHDThemeVO * _Nonnull)themeVO;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader33TextAnnotationAlignmentActionView")
@interface TextAnnotationAlignmentActionView : PlayerActionBar
@property (nonatomic) NSTextAlignment selectedAlignment;
@property (nonatomic) CGPoint atPoint;
@property (nonatomic) NSInteger numberOfItems;
- (void)addTextAnnotationAlignmentViewWithHdThemeVO:(KBHDThemeVO * _Nonnull)hdThemeVO currentBook:(KitabooBookVO * _Nonnull)currentBook parentView:(UIView * _Nonnull)parentView onView:(UIView * _Nonnull)onView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader31TextAnnotationPalleteActionView")
@interface TextAnnotationPalleteActionView : PlayerActionBar
@property (nonatomic, strong) UIColor * _Nonnull selectedColor;
- (void)addTextAnnotationTextColorViewWithHdThemeVO:(KBHDThemeVO * _Nonnull)hdThemeVO currentBook:(KitabooBookVO * _Nonnull)currentBook parentView:(UIView * _Nonnull)parentView onView:(UIView * _Nonnull)onView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol TextSearchViewDelegate;
@class TextSearchResult;

SWIFT_CLASS("_TtC20KitabooSDKWithReader14TextSearchView")
@interface TextSearchView : UIView <UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, strong) UITextField * _Nonnull searchBar;
@property (nonatomic, strong) id <TextSearchViewDelegate> _Nullable delegate;
@property (nonatomic, strong) NSMutableArray * _Nonnull searchResultArray;
@property (nonatomic) BOOL isAudioSearchEnabled;
@property (nonatomic, strong) UIButton * _Nonnull cancelBtn;
@property (nonatomic, strong) UIButton * _Nonnull openBtn;
@property (nonatomic, strong) UIButton * _Nonnull nextBtn;
@property (nonatomic, strong) UIButton * _Nonnull PrevBtn;
@property (nonatomic, strong) UIButton * _Nonnull animateMicButton;
@property (nonatomic, copy) void (^ _Nullable didClickOnSearchResult)(TextSearchResult * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable didClickOnNextResult)(TextSearchResult * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable didClickOnPreviousResult)(TextSearchResult * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable didClickOnOpenResult)(TextSearchResult * _Nonnull);
@property (nonatomic) NSInteger batchSize;
@property (nonatomic) NSInteger searchoffset;
- (void)updateSearchDataWithArrayWithArray:(NSArray * _Nonnull)array;
- (nonnull instancetype)initWithFrame:(CGRect)frame themeVO:(KBHDThemeVO * _Nonnull)themeVO currentBookVO:(KitabooBookVO * _Nonnull)currentBookVO OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithElasticSearch:(CGRect)frame themeVO:(KBHDThemeVO * _Nonnull)themeVO currentBookVO:(KitabooBookVO * _Nonnull)currentBookVO isAudioSearchEnabled:(BOOL)isAudioSearchEnabled OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initForReaderSearch:(CGRect)frame themeVO:(KBHDThemeVO * _Nonnull)themeVO currentBookVO:(KitabooBookVO * _Nonnull)currentBookVO isAudioSearchEnabled:(BOOL)isAudioSearchEnabled OBJC_DESIGNATED_INITIALIZER;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)showGeneratingSearchResultView;
- (void)renderSearchResultWithSearchResult:(NSArray * _Nonnull)searchResult;
- (void)renderSearchResultWithSearchResult:(NSArray * _Nonnull)searchResult withCaseSensitiveSearch:(BOOL)caseSensitive;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)showSearchResultView;
- (void)removeSearchResultView;
- (TextSearchResult * _Nullable)getNextSearchResult:(TextSearchResult * _Nonnull)currentSearchResult SWIFT_WARN_UNUSED_RESULT;
- (TextSearchResult * _Nullable)getPreviousSearchResult:(TextSearchResult * _Nonnull)currentSearchResult SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_PROTOCOL_NAMED("TextSearchViewDelegate")
@protocol TextSearchViewDelegate
- (NSArray * _Nullable)fetchNextSearchResultForText:(NSString * _Nonnull)searchText WithStartOffset:(NSInteger)startOffset WithBatchSize:(NSInteger)batchSize SWIFT_WARN_UNUSED_RESULT;
- (void)voiceSearchText:(NSString * _Nonnull)searchText isElasticSearch:(BOOL)isElasticSearch;
- (void)showPermissionAlert;
- (void)voiceSearchNotAvailable;
- (void)startVoiceRecognition;
- (void)stopVoiceRecognition;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader18TranslationOptions")
@interface TranslationOptions : NSObject
- (nonnull instancetype)initWithLanguage:(NSString * _Nonnull)language autoEnableDocumentTranslation:(BOOL)autoEnableDocumentTranslation autoEnableWordTranslation:(BOOL)autoEnableWordTranslation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface UIFont (SWIFT_EXTENSION(KitabooSDKWithReader))
+ (void)jbs_registerFontWithFilenameString:(NSString * _Nonnull)filenameString bundle:(NSBundle * _Nonnull)bundle;
@end





#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef KITABOOSDKWITHREADER_SWIFT_H
#define KITABOOSDKWITHREADER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import Kitaboo_Reader_SDK;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <KitabooSDKWithReader/KitabooSDKWithReader.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="KitabooSDKWithReader",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC20KitabooSDKWithReader20AccessibilityManager")
@interface AccessibilityManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AccessibilityManager * _Nonnull sharedObject;)
+ (AccessibilityManager * _Nonnull)sharedObject SWIFT_WARN_UNUSED_RESULT;
- (void)setAccessibilityBundle;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_CLASS("_TtC20KitabooSDKWithReader5Chunk")
@interface Chunk : NSObject
- (nonnull instancetype)initWithContent:(NSString * _Nonnull)content lang:(NSString * _Nullable)lang mimeType:(NSString * _Nullable)mimeType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader7Content")
@interface Content : NSObject
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title chunks:(NSArray<Chunk *> * _Nonnull)chunks OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;

SWIFT_CLASS("_TtC20KitabooSDKWithReader12CustomSlider")
@interface CustomSlider : UISlider
- (CGRect)trackRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader14DisplayOptions")
@interface DisplayOptions : NSObject
- (nonnull instancetype)initWithTextSize:(NSInteger)textSize increaseSpacing:(BOOL)increaseSpacing fontFamily:(NSString * _Nonnull)fontFamily OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class KBHDThemeVO;
@class NSBundle;

SWIFT_CLASS("_TtC20KitabooSDKWithReader20HDDropdownController")
@interface HDDropdownController : UIViewController
@property (nonatomic) NSInteger selectedIndex;
@property (nonatomic, strong) KBHDThemeVO * _Nullable kbthemeVO;
@property (nonatomic, copy) void (^ _Nullable tapOnItem)(NSInteger);
- (nonnull instancetype)initWithDropDownData:(NSArray<NSString *> * _Nonnull)dropDownData;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;

@interface HDDropdownController (SWIFT_EXTENSION(KitabooSDKWithReader)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UITableViewCell;

@interface HDDropdownController (SWIFT_EXTENSION(KitabooSDKWithReader)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

enum HDAnalyticsEventType : NSInteger;
@class HDKitabooAnalyticsMetaData;

SWIFT_CLASS("_TtC20KitabooSDKWithReader25HDKitabooAnalyticsHandler")
@interface HDKitabooAnalyticsHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)trackEvent:(enum HDAnalyticsEventType)eventType metadata:(HDKitabooAnalyticsMetaData * _Nonnull)metadata;
- (void)notifyEvent:(NSString * _Null_unspecified)eventName eventInfo:(NSDictionary<NSString *, id> * _Null_unspecified)eventInfo;
- (NSString * _Nonnull)getTrackingJSON SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, HDAnalyticsEventType, open) {
  HDAnalyticsEventTypeKTypePageTracking = 0,
  HDAnalyticsEventTypeKTypeNoteCreated = 1,
  HDAnalyticsEventTypeKTypeImpHighlightCreated = 2,
  HDAnalyticsEventTypeKTypeNormHighlightCreated = 3,
  HDAnalyticsEventTypeKTypeNoteShared = 4,
  HDAnalyticsEventTypeKTypeNoteReceived = 5,
  HDAnalyticsEventTypeKTypeNoteDeleted = 6,
  HDAnalyticsEventTypeKTypeImpHighlightDeleted = 7,
  HDAnalyticsEventTypeKTypeNormHighlightDeleted = 8,
  HDAnalyticsEventTypeKTypeBookClose = 9,
  HDAnalyticsEventTypeKTypeBookOpen = 10,
  HDAnalyticsEventTypeKTypeImpHighlightReceived = 11,
  HDAnalyticsEventTypeKTypeNormHighlightReceived = 12,
  HDAnalyticsEventTypeKTypeImpHighlightShared = 13,
  HDAnalyticsEventTypeKTypeNormHighlightShared = 14,
  HDAnalyticsEventTypeKTypeLinkOpen = 15,
};


SWIFT_CLASS("_TtC20KitabooSDKWithReader26HDKitabooAnalyticsMetaData")
@interface HDKitabooAnalyticsMetaData : NSObject
- (nonnull instancetype)initWithPageTracking:(NSString * _Nullable)cfi pageId:(NSString * _Nullable)pageId timeSpent:(NSString * _Nullable)timeSpent chapterId:(NSString * _Nullable)chapterId chapterName:(NSString * _Nullable)chapterName uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBookOpen:(NSString * _Nullable)bookId openTimeStamp:(NSString * _Nullable)openTimeStamp classId:(NSString * _Nullable)classId suspendData:(NSString * _Nullable)suspendData uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBookClose:(NSString * _Nullable)accessTime lastPageFolio:(NSString * _Nullable)lastPageFolio uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUGCTracking:(NSString * _Nullable)pageId uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithResourceTracking:(NSDictionary<NSString *, id> * _Nullable)resourceDict uniqueId:(NSString * _Nullable)uniqueId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol HDKitabooMediaBookReaderDelegate;
@protocol HDKitabooMediaPopOverControllerDelegate;
enum MediaBookType : NSInteger;
@class KitabooUser;
@class NSNumber;
@class HDKitabooMediaBookThemeVO;
@protocol UIViewControllerTransitionCoordinator;
@class UIButton;
@class HDMediaBookModel;
@class UIImageView;
@class SDKBookmarkVO;
@class HDMediaBookChapterVO;
@class HDMediaBookTranscriptVO;
@class UIView;

/// An object that initializes all the components which are part of the AudioBook/VideoBook.
/// A HDKitabooMediaBookReader initializes all the components which are part of the AudioBook/VideoBook and provides/handles call backs of all the components
/// <ul>
///   <li>
///     SuperClass : UIViewController
///   </li>
/// </ul>
SWIFT_CLASS("_TtC20KitabooSDKWithReader24HDKitabooMediaBookReader")
@interface HDKitabooMediaBookReader : UIViewController <HDAudioBookPlayerViewControllerDelegate, HDKitabooSleepTimerControllerDelegate, HDMediaBookBookmarkControllerDelegate, HDMediaBookNarrationSpeedControllerDelegate, HDMediaBookPlayerDelegate, HDMediaBookTOCControllerDelegate, HDVideoBookPlayerViewControllerDelegate, UIPopoverPresentationControllerDelegate>
/// The object that acts as the delegate of the HDKitabooMediaBookReader.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDKitabooMediaBookReaderDelegate> _Nullable delegate;
/// The object that acts as the delegate of the HDAudioBookPlayerViewController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDAudioBookPlayerViewControllerDelegate> _Nullable audioPlayerDelegate;
/// The object that acts as the delegate of the HDVideoBookPlayerViewController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDVideoBookPlayerViewControllerDelegate> _Nullable videoPlayerDelegate;
/// The object that acts as the delegate of the HDMediaBookTOCController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDMediaBookTOCControllerDelegate> _Nullable tocDelegate;
/// The object that acts as the delegate of the HDMediaBookNarrationSpeedController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDMediaBookNarrationSpeedControllerDelegate> _Nullable speedDelegate;
/// The object that acts as the delegate of the HDMediaBookBookmarkController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDMediaBookBookmarkControllerDelegate> _Nullable bookmarkDelegate;
/// The object that acts as the delegate of the HDMediaBookPlayer.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDMediaBookPlayerDelegate> _Nullable mediaPlayerDelegate;
/// The object that acts as the delegate of the HDKitabooSleepTimerController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDKitabooSleepTimerControllerDelegate> _Nullable sleepTimerDelegate;
/// The object that acts as the delegate of the HDKitabooMediaPopOverController.
/// The delegate must adopt the HDKitabooMediaBookReaderDelegate protocol.
@property (nonatomic, weak) id <HDKitabooMediaPopOverControllerDelegate> _Nullable popOverDelegate;
/// Initializes the HDKitabooMediaBookReader object
/// This method should be called to initialize the HDKitabooMediaBookReader object where the extension can be m3u8/mp3/mp4 etc.
/// \param mediaBookPath mediaBookPath is the path of the Media to be played.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (nonnull instancetype)init:(NSString * _Nullable)mediaBookPath mediaThumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookId:(NSString * _Nullable)bookId bookISBN:(NSString * _Nullable)bookISBN additionalInfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalInfo OBJC_DESIGNATED_INITIALIZER;
/// Initializes the HDKitabooMediaBookReader object
/// This method should be called to initialize the HDKitabooMediaBookReader object.
/// NOTE : This method will only be used for HLS downloaded book where <code>metaDataPath</code> will be the path where all the additional data of Media Book will be downloaded i.e. Media images, TOC etc.
/// \param metaDataPath metaDataPath will be the path where all the additional data of Media Book will be downloaded i.e. Media images, TOC etc.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param bookId bookId,  MediaBook bookId. Note : - It is a mandatory parameter and, It is the same asset name which is used to download the media.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (nonnull instancetype)initWithMediaMetaDataPath:(NSString * _Nullable)metaDataPath mediaThumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookISBN:(NSString * _Nullable)bookISBN bookId:(NSString * _Nullable)bookId additionalInfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalInfo OBJC_DESIGNATED_INITIALIZER;
/// Initializes the HDKitabooMediaBookReader object.
/// This method should be called to initialize the HDKitabooMediaBookReader object. This method only be called for HLS Online Media Books where user is not having the m3u8 path.
/// \param user user, Object of KitabooUser.
///
/// \param baseURLString baseURLString,  Base URL String.
///
/// \param clientID clientID,  Client Id.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param timeStamp timeStamp,  Time Stamp.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (nonnull instancetype)initWithKitabooUser:(KitabooUser * _Nonnull)user baseURLString:(NSString * _Nonnull)baseURLString microServicesURL:(NSString * _Nonnull)microServicesURL clientID:(NSString * _Nonnull)clientID bookId:(NSNumber * _Nonnull)bookId timeStamp:(NSNumber * _Nonnull)timeStamp thumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookISBN:(NSString * _Nullable)bookISBN enableCDNCookies:(BOOL)enable additionalInfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalInfo OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// To update the HDKitabooMediaBookReader object
/// This method should be called to update the HDKitabooMediaBookReader object where the extension can be m3u8/mp3/mp4 etc.
/// \param mediaBookPath mediaBookPath is the path of the Media to be played.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (void)updateMediaReaderWithBookPath:(NSString * _Nullable)mediaBookPath mediaThumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookId:(NSString * _Nullable)bookId bookISBN:(NSString * _Nullable)bookISBN additionalinfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalinfo;
/// To update the HDKitabooMediaBookReader object
/// This method should be called to update the HDKitabooMediaBookReader object.
/// NOTE : This method will only be used for HLS downloaded book where <code>metaDataPath</code> will be the path where all the additional data of Media Book will be downloaded i.e. Media images, TOC etc.
/// \param path path will be the path where all the additional data of Media Book will be downloaded i.e. Media images, TOC etc.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param bookId bookId,  MediaBook bookId. Note : - It is a mandatory parameter and, It is the same asset name which is used to download the media.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (void)updateMediaReaderWithMetaDataPath:(NSString * _Nullable)path mediaThumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookISBN:(NSString * _Nullable)bookISBN bookId:(NSString * _Nullable)bookId additionalinfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalinfo;
/// To update the HDKitabooMediaBookReader object.
/// This method should be called to update the HDKitabooMediaBookReader object. This method only be called for HLS Online Media Books where user is not having the m3u8 path.
/// \param user user, Object of KitabooUser.
///
/// \param baseURLString baseURLString,  Base URL String.
///
/// \param clientID clientID,  Client Id.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param timeStamp timeStamp,  Time Stamp.
///
/// \param thumbnailURL thumbnailURL is the image URL String. <code>thumbnailURL</code> is the url of the image that needs to be displayed. For Video Books, there will not be any image displayed.
///
/// \param mediaBookType mediaBookType,  An Object to get media book asset type, whether it is Audio or Video.
///
/// \param bookISBN bookISBN,  MediaBook ISBN.
///
/// \param additionalInfo additionalInfo is Dictionary where all additional data can pass. i.e  prefix for Encryption with prefix key
///
- (void)updateMediaReaderWithKitabooUser:(KitabooUser * _Nonnull)user baseURLString:(NSString * _Nonnull)baseURLString microServicesURL:(NSString * _Nonnull)microServicesURL clientID:(NSString * _Nonnull)clientID bookId:(NSNumber * _Nonnull)bookId timeStamp:(NSNumber * _Nonnull)timeStamp thumbnailURL:(NSString * _Nullable)thumbnailURL mediaBookType:(enum MediaBookType)mediaBookType bookISBN:(NSString * _Nullable)bookISBN enableCDNCookies:(BOOL)enable additionalinfo:(NSDictionary<NSString *, NSString *> * _Nullable)additionalinfo;
/// To set the theme color to various components of the views/controllers related to MediaBook
/// This method should be called to set the color to various components of the views/controllers related to MediaBook. The colors will be fetched from the json provided. If this method is not called, then the default colors will be applied to UI components
/// \param themeVO themeVO is the HDKitabooMediaBookThemeVO instance.If this object is not set, then the default colors will be applied to UI components
///
- (void)setTheme:(HDKitabooMediaBookThemeVO * _Nullable)themeVO;
/// To enable/disable the Bookmark Feature in AudioBook Player
/// This method should be called to enable/disable the Bookmark Feature in AudioBook Player.If this method is not called then by default the Bookmark Feature will be enabled.
/// \param enable enable is a boolean.If this boolean is set as false, then Bookmark Feature will be disabled and vice versa.
///
- (void)enableBookmark:(BOOL)enable;
/// To set the bookmarks
/// This method should be called to set the bookmarks
/// \param bookmarkArray bookmarkArray is a NSArray object.It should be an array of SDKBookmarkVO objects
///
- (void)setBookmarks:(NSArray * _Nonnull)bookmarkArray;
/// To set start time of the AudioBook
/// This method should be called to set the start time of the AudioBook when where the initial narration should start from
/// \param time It should be the start time of AudioBook.It is an Int value
///
- (void)setStartTime:(NSDictionary * _Nonnull)metaData;
/// To enable next previous feature for media books.
/// \param enabled A Book Value
///
- (void)enableNextPreviousFeature:(BOOL)enabled;
/// To enable next previous feature for media books.
/// \param enabled A Book Value
///
- (void)setNextPreviousBookIds:(NSArray<NSNumber *> * _Nonnull)bookIds;
/// To load HLS Media Book Path and play the Media.
/// This method only be called for HLS Online Media Books where user is not having the m3u8 path.
/// \param user user, Object of KitabooUser.
///
/// \param baseURLString baseURLString,  Base URL String.
///
/// \param clientID clientID,  Client Id.
///
/// \param bookId bookId,  MediaBook bookId.
///
/// \param timeStamp timeStamp,  Time Stamp.
///
/// \param launchMedia launchMedia,  A Boolean value which means after loading the media book path, the media player should be launched or not.
///
- (void)loadHLSMediaBookPathForUser:(KitabooUser * _Nonnull)kitabooUser baseURLString:(NSString * _Nonnull)baseURLString clientID:(NSString * _Nonnull)clientID microServicesURL:(NSString * _Nonnull)microServicesURL bookId:(NSNumber * _Nonnull)bookId timeStamp:(NSNumber * _Nonnull)timeStamp shouldLaunchMedia:(BOOL)launchMedia;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)didTapOnBookmark;
- (void)didTapOnNarrationSpeed:(UIButton * _Nonnull)button;
- (void)didTapOnForward;
- (void)didTapOnRewind;
- (void)didTapOnNextChapter;
- (void)didTapOnPreviousChapter;
- (void)didSeekBarValueChanged;
- (void)didTapOnPlayPause:(HDMediaBookModel * _Nonnull)mediaBookModel;
- (UIImageView * _Nullable)imageViewForThumbnail:(NSString * _Nonnull)thumbnailURL SWIFT_WARN_UNUSED_RESULT;
- (void)didNarrationSpeedValueChanges:(HDMediaBookModel * _Nullable)mediaBookModel;
- (void)didTapOnCancel;
- (void)didTapOnAddBookmark:(SDKBookmarkVO * _Nonnull)bookmarkVO;
- (void)didTapOnDeleteBookmark:(SDKBookmarkVO * _Nonnull)bookmarkVO;
- (void)didTapOnCancelBookmark:(SDKBookmarkVO * _Nullable)bookmarkVO;
- (void)didTapOnChapterSegment;
- (void)didTapOnTranscriptSegment;
- (void)didTapOnBookmarkSegment;
- (void)didTapOnChapter:(HDMediaBookChapterVO * _Nonnull)chapterModel;
- (void)didTapOnTranscript:(HDMediaBookTranscriptVO * _Nonnull)chapterModel;
- (void)didTapOnBookmark:(SDKBookmarkVO * _Nonnull)bookmarkVO;
- (void)didTapOnChapterPlayPause:(HDMediaBookModel * _Nonnull)mediaBookModel;
- (void)didTapOnBookmarkDelete:(SDKBookmarkVO * _Nonnull)bookmarkVO;
- (void)playerPlayingWithCurrentTime:(NSInteger)currentTime totalTime:(NSInteger)totalTime;
- (void)playerDidFinishPlaying;
- (void)playerFailedToPlayWithError:(NSError * _Nonnull)error;
- (void)playerDidChangeStateWithMediaBookModel:(HDMediaBookModel * _Nonnull)mediaBookModel;
/// It will return a Dictionary which will contains all the information about a media book, i.e. Media book current time, folio ID etc.
- (NSDictionary * _Nonnull)getMetaData SWIFT_WARN_UNUSED_RESULT;
/// A method to close media book Player.
- (void)closePlayer;
- (void)didTapOnVideoView:(BOOL)enableControls;
- (void)didTapOnVideoFullScreen:(BOOL)isFullScreen;
- (void)didTapOnVideoMute:(BOOL)isMute;
- (void)didTapOnVideoBack;
- (void)didTapOnVideoBookmark;
- (void)didTapOnVideoNarrationSpeed:(UIButton * _Nonnull)button;
- (void)didTapOnVideoRewind;
- (void)didTapOnVideoForward;
- (void)didTapOnVideoPlayPause:(HDMediaBookModel * _Nonnull)mediaBookModel;
- (void)didTapOnVideoNextChapter;
- (void)didTapOnVideoPreviousChapter;
- (void)didVideoSeekBarValueChanged;
- (void)didTapOnSubtitleView:(BOOL)enabled;
- (void)didTapOnVideoMoreOptions:(UIView * _Nonnull)view;
- (void)didRemoveSleepTimerView;
- (void)didSetAudioSleepTimerWithSelectedSleepTime:(NSTimeInterval)selectedSleepTime selectedSleepAction:(enum SleepAction)selectedSleepAction;
- (void)didSetAudioSleepTimerOff;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

/// An Object to get media book asset type, whether it is Audio or Video.
typedef SWIFT_ENUM(NSInteger, MediaBookType, open) {
  MediaBookTypeKMediaBookAudio = 0,
  MediaBookTypeKMediaBookVideo = 1,
};



@interface HDKitabooMediaBookReader (SWIFT_EXTENSION(KitabooSDKWithReader)) <HDKitabooMediaPopOverControllerDelegate>
- (void)didTapOnItem:(NSString * _Nonnull)itemTitle;
- (void)didTapOnCancelItem;
- (void)didChangeSwitchState:(BOOL)isOn;
@end



@interface HDKitabooMediaBookReader (SWIFT_EXTENSION(KitabooSDKWithReader))
/// A method to enable/disable media Book next media Button UI.
- (void)disableNextMediaButton:(BOOL)disable;
/// A method to enable/disable media Book previous media Button UI.
- (void)disablePreviousMediaButton:(BOOL)disable;
/// A method to hide/unhide media Book next/previous media Button UI.
- (void)hideNextPreviousControls:(BOOL)hide;
@end


/// The delegate of a HDKitabooMediaBookReader object must adopt the HDKitabooMediaBookReaderDelegate protocol.
/// HDKitabooMediaBookReaderDelegate Protocol used to handle all the callbacks of HDKitabooMediaBookReader Class.The HDKitabooMediaBookReaderDelegate protocol defines methods to provide callback when user perform any action on HDKitabooMediaBookReader.
/// When configuring the HDKitabooMediaBookReader object, assign your delegate object to its delegate property.
SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader32HDKitabooMediaBookReaderDelegate_")
@protocol HDKitabooMediaBookReaderDelegate
@optional
/// Delegate method when tapped on back button
/// This method will be called when user tap on the back button
- (void)didTapOnBack:(NSDictionary * _Nonnull)additionalInfo mediaBookReader:(HDKitabooMediaBookReader * _Nonnull)mediaBookReader;
/// Delegate method to update the thumbnail image
/// This method will be called to set the thumbnail image.User need to return UIImageView after setting the image from thumbnailURL.If the UIImageView is not returned then SDK will load the image itself.
/// UIImageView is not returned then
/// \param thumbnailURL thumbnailURL is the image URL String.thumbnailURL is the url of the image that needs to be displayed
///
- (UIImageView * _Nullable)imageViewForThumbnail:(NSString * _Nonnull)thumbnailURL SWIFT_WARN_UNUSED_RESULT;
/// Delegate method when bookmark is created/deleted
/// This method will be called when the bookmark is created/deleted
/// \param bookmarkVO is the SDKBookmarkVO object. 
///
- (void)didBookmarkCompleteWithBookmarkVO:(SDKBookmarkVO * _Nonnull)bookmarkVO;
/// Delegate method which will be called for every 10 seconds.
/// This method will be called for every 10 seconds.
/// \param additionalInfo is the Dictionary object which actually contains the details such as currentTime, ChapterName , FolioID and the fileName of the Audio. 
///
- (void)didSchedulerCalledWithInfo:(NSDictionary * _Nonnull)additionalInfo;
/// Delegate method will be called when HLS Online media url service gets failed.
/// \param error is the error for which HLS Media gets failed. 
///
/// \param bookId is the bookId for which HLS Media gets failed. 
///
/// \param timeStamp is the time stampe  for which HLS Media gets failed. 
///
- (void)didHLSMediaServiceFailWithError:(NSError * _Nonnull)error bookId:(NSNumber * _Nonnull)bookId timeStamp:(NSNumber * _Nonnull)timeStamp;
/// Delegate method will be called when HLS Online media URL service gets called successfully.
/// \param mediaPath is the mediaPath which is loaded. 
///
/// \param bookId is the bookId for which mediaPath is loaded. 
///
- (void)didHLSMediaServiceCallSuccessfullyWithMediaPath:(NSString * _Nonnull)mediaPath withBookID:(NSNumber * _Nonnull)bookId;
/// Delegate method will be called every time whenever media state(Play/Pause) is changed.
/// \param mediaState is the changed state of the media. 
///
- (void)didMediaPlaybackStateChange:(NSString * _Nonnull)mediaState;
/// Delegate method when user taps on Next media button.
/// This method will be called when user taps on Next media button.
- (void)didTapOnNextMediaButton:(HDKitabooMediaBookReader * _Nonnull)mediaPlayer;
/// Delegate method when user taps on user taps on Previous media button.
/// This method will be called when user taps on Previous media button.
- (void)didTapOnPreviousMediaButton:(HDKitabooMediaBookReader * _Nonnull)mediaPlayer;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader16HDLanguageBundle")
@interface HDLanguageBundle : NSBundle
- (NSString * _Nonnull)localizedStringForKey:(NSString * _Nonnull)key value:(NSString * _Nullable)value table:(NSString * _Nullable)tableName SWIFT_WARN_UNUSED_RESULT;
+ (void)setApplicationLanguage:(NSString * _Nonnull)language;
- (nullable instancetype)initWithPath:(NSString * _Nonnull)path OBJC_DESIGNATED_INITIALIZER;
@end

@protocol HDReadToMeViewControllerDelegates;
enum ReadAloudMode : NSInteger;
@class UIGestureRecognizer;
@class UITouch;

SWIFT_CLASS("_TtC20KitabooSDKWithReader24HDReadToMeViewController")
@interface HDReadToMeViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, strong) id <HDReadToMeViewControllerDelegates> _Nullable delegate;
- (nonnull instancetype)initWithReadAloudMode:(enum ReadAloudMode)mode OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (void)setTheme:(KBHDThemeVO * _Nonnull)themeVO;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader33HDReadToMeViewControllerDelegates_")
@protocol HDReadToMeViewControllerDelegates
- (void)didCloseReadToMeView;
- (void)didTapOnReadToMeForReadAloud;
- (void)didTapOnAutoPlayForReadAloud;
- (void)didTapOnLetMeReadForReadAloud;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader24HDReaderServiceConstants")
@interface HDReaderServiceConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode200;)
+ (NSString * _Nonnull)responseStatusCode200 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode600;)
+ (NSString * _Nonnull)responseStatusCode600 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode400;)
+ (NSString * _Nonnull)responseStatusCode400 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode103;)
+ (NSString * _Nonnull)responseStatusCode103 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode202;)
+ (NSString * _Nonnull)responseStatusCode202 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode426;)
+ (NSString * _Nonnull)responseStatusCode426 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode204;)
+ (NSString * _Nonnull)responseStatusCode204 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull responseStatusCode800;)
+ (NSString * _Nonnull)responseStatusCode800 SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader31HDScreenCaptureResistController")
@interface HDScreenCaptureResistController : UIViewController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)resistScreenCapture;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader31HDSpeedSelectionOptionsDelegate_")
@protocol HDSpeedSelectionOptionsDelegate
- (void)speedOptionSelectedWithOption:(NSInteger)option;
@end

@class UIColor;

SWIFT_CLASS("_TtC20KitabooSDKWithReader27HDSpeedSelectionOptionsView")
@interface HDSpeedSelectionOptionsView : UIView
@property (nonatomic, strong) id <HDSpeedSelectionOptionsDelegate> _Nullable delegate;
@property (nonatomic, strong) UIColor * _Nonnull iconColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setTheme;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader23HDTranslationController")
@interface HDTranslationController : UIViewController
@property (nonatomic, copy) NSString * _Nullable googleAPIKey;
- (nonnull instancetype)initWithHighlightText:(NSString * _Nonnull)highlightText kbthemeVO:(KBHDThemeVO * _Nonnull)kbthemeVO;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader12HelpDelegate_")
@protocol HelpDelegate
- (void)swipeAtIndex:(NSInteger)index;
- (void)didRemovedHelpScreen;
@end

@class UILabel;

SWIFT_CLASS("_TtC20KitabooSDKWithReader14HelpDescriptor")
@interface HelpDescriptor : NSObject
@property (nonatomic) BOOL onSecondScreen;
- (nonnull instancetype)initWithIcon:(UILabel * _Nonnull)icon helpTitle:(NSString * _Nonnull)helpTitle helpText:(NSString * _Nonnull)helpText tagName:(NSString * _Nonnull)tagName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader10HelpScreen")
@interface HelpScreen : UIViewController
@property (nonatomic, copy) NSArray<HelpDescriptor *> * _Nonnull helpDescriptors;
@property (nonatomic) BOOL showSecondScreen;
@property (nonatomic) BOOL isForTeacherReview;
@property (nonatomic) BOOL isForBookShelf;
@property (nonatomic) BOOL isForFirstTime;
@property (nonatomic) BOOL isOnSecondScreenOnHelpScreen;
@property (nonatomic, weak) id <HelpDelegate> _Nullable delegate;
- (void)setBackGroundColorWithColor:(NSString * _Nonnull)color;
- (void)setLineColorWithColor:(NSString * _Nonnull)color;
- (void)setEllipseColorWithColor:(NSString * _Nonnull)color;
- (void)setIconColorWithColor:(NSString * _Nonnull)color;
- (void)setTitleTextColorWithColor:(NSString * _Nonnull)color;
- (void)setDescriptionTextColorWithColor:(NSString * _Nonnull)color;
- (void)setGotItButtonBackgroundColorWithColor:(NSString * _Nonnull)color;
- (void)setGotItButtonTextColorWithColor:(NSString * _Nonnull)color;
- (void)setSkipButtonBackgroundColorWithColor:(NSString * _Nonnull)color;
- (void)setSkipButtonTextColorWithColor:(NSString * _Nonnull)color;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)setUpViews;
- (void)swipeToLeft;
- (void)swipeToRight;
- (void)removeViews;
- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSLayoutConstraint;

SWIFT_CLASS("_TtC20KitabooSDKWithReader17HighLightToolView")
@interface HighLightToolView : UIView
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified iconLabel;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified contentView;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified widthConstraintOfIcon;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified heightConstraintOfIcon;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified widthConstraintOfBorderView;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified heightConstraintOfBorderView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified borderView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)resetViewForColorPalletWithColorHeight:(CGFloat)colorHeight;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSMutableArray;
@class UIStackView;

SWIFT_CLASS("_TtC20KitabooSDKWithReader13HighlightView")
@interface HighlightView : HighlightActionView
@property (nonatomic, copy) void (^ _Nullable highLightToolActions)(HighLightToolView * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable highlightTextAction)(HighLightToolView * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) NSString * _Null_unspecified selectedColorStr;
@property (nonatomic, strong) NSMutableArray * _Null_unspecified highlighColorsArray;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified horizontalColorsStackConstraint;
@property (nonatomic, weak) IBOutlet UIStackView * _Null_unspecified horizontalStackForHighLightTools;
@property (nonatomic, weak) IBOutlet UIStackView * _Null_unspecified horizontalStackForColors;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified contentView;
- (nonnull instancetype)initWithFrame:(CGRect)frame selectedColor:(NSString * _Nonnull)selectedColor selectedBorderColor:(UIColor * _Nonnull)selectedBorderColor OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addHighLightToolbuttonWithHighLightTool:(UIView * _Nonnull)highLightTool;
- (void)resetHighlightView;
- (void)addColorViewWithHightlighColorView:(UIView * _Nonnull)hightlighColorView color:(NSString * _Nonnull)color;
- (void)addShowHideHightLightsViewWithHighLightTool:(UIView * _Nonnull)highLightTool;
- (void)changeHighLightToolButtonIconWithIconText:(NSString * _Nonnull)iconText highlightItemType:(HighlightItemType)highlightItemType;
- (null_unspecified instancetype)initWithItemSize:(CGSize)itemSize SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NError;

SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader23ImmersiveReaderDelegate_")
@protocol ImmersiveReaderDelegate
- (void)didExitImmersiveReader;
- (void)didFinishLaunching:(NError * _Nullable)error;
@end

@class Options;

SWIFT_CLASS("_TtC20KitabooSDKWithReader29ImmersiveReaderViewController")
@interface ImmersiveReaderViewController : UIViewController
- (nullable instancetype)initWithToken:(NSString * _Nonnull)token subdomain:(NSString * _Nonnull)subdomain content:(Content * _Nonnull)content options:(Options * _Nullable)options delegate:(id <ImmersiveReaderDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class WKUserContentController;
@class WKScriptMessage;

@interface ImmersiveReaderViewController (SWIFT_EXTENSION(KitabooSDKWithReader)) <WKScriptMessageHandler>
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
@end

@class WKWebView;
@class WKNavigation;

@interface ImmersiveReaderViewController (SWIFT_EXTENSION(KitabooSDKWithReader)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
@end

@class WKWebViewConfiguration;

SWIFT_CLASS("_TtC20KitabooSDKWithReader22ImmersiveReaderWebView") SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface ImmersiveReaderWebView : WKWebView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame configuration:(WKWebViewConfiguration * _Nonnull)configuration SWIFT_UNAVAILABLE;
@end

enum PrintType : NSInteger;
@protocol KBMyDataPrintOptionsControllerDelegate;

SWIFT_CLASS("_TtC20KitabooSDKWithReader30KBMyDataPrintOptionsController")
@interface KBMyDataPrintOptionsController : UIViewController
@property (nonatomic, strong) KBHDThemeVO * _Null_unspecified kbthemeVO;
@property (nonatomic) enum PrintType hiddenPrintType;
@property (nonatomic, weak) id <KBMyDataPrintOptionsControllerDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface KBMyDataPrintOptionsController (SWIFT_EXTENSION(KitabooSDKWithReader)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface KBMyDataPrintOptionsController (SWIFT_EXTENSION(KitabooSDKWithReader)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader38KBMyDataPrintOptionsControllerDelegate_")
@protocol KBMyDataPrintOptionsControllerDelegate
- (void)didTapOnPrintTypeWithPrintType:(enum PrintType)printType;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader26KitabooReaderEventConstant")
@interface KitabooReaderEventConstant : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bookmarkEventName;)
+ (NSString * _Nonnull)bookmarkEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull pentoolEventName;)
+ (NSString * _Nonnull)pentoolEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull protractorEventName;)
+ (NSString * _Nonnull)protractorEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull equationEditorEventName;)
+ (NSString * _Nonnull)equationEditorEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull readAloudEventName;)
+ (NSString * _Nonnull)readAloudEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull homeButtonEventName;)
+ (NSString * _Nonnull)homeButtonEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull tocEventName;)
+ (NSString * _Nonnull)tocEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull thumbnailEventName;)
+ (NSString * _Nonnull)thumbnailEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull teacherReviewEventName;)
+ (NSString * _Nonnull)teacherReviewEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontResetEventName;)
+ (NSString * _Nonnull)fontResetEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull highlightEventName;)
+ (NSString * _Nonnull)highlightEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull highlightEventParameterNoteColor;)
+ (NSString * _Nonnull)highlightEventParameterNoteColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull stickyNoteEventName;)
+ (NSString * _Nonnull)stickyNoteEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull stickyNoteEventParameterNoteColor;)
+ (NSString * _Nonnull)stickyNoteEventParameterNoteColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contextualNoteEventName;)
+ (NSString * _Nonnull)contextualNoteEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contextualNoteEventParameterNoteColor;)
+ (NSString * _Nonnull)contextualNoteEventParameterNoteColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull searchEventName;)
+ (NSString * _Nonnull)searchEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull searchEventParameterSearchText;)
+ (NSString * _Nonnull)searchEventParameterSearchText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontFamilyEventName;)
+ (NSString * _Nonnull)fontFamilyEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontFamilyEventParameterFontValue;)
+ (NSString * _Nonnull)fontFamilyEventParameterFontValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontSizeEventName;)
+ (NSString * _Nonnull)fontSizeEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontSizeEventParameterFontSizeValue;)
+ (NSString * _Nonnull)fontSizeEventParameterFontSizeValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontAlignmentDataEventName;)
+ (NSString * _Nonnull)fontAlignmentDataEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontAlignmentDataEventParameterFontAlignment;)
+ (NSString * _Nonnull)fontAlignmentDataEventParameterFontAlignment SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontLineSpacingEventName;)
+ (NSString * _Nonnull)fontLineSpacingEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontLineSpacingEventParameterFontLineSpacing;)
+ (NSString * _Nonnull)fontLineSpacingEventParameterFontLineSpacing SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontMarginDataEventName;)
+ (NSString * _Nonnull)fontMarginDataEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontMarginDataEventParameterFontMarginData;)
+ (NSString * _Nonnull)fontMarginDataEventParameterFontMarginData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontReadingModeEventName;)
+ (NSString * _Nonnull)fontReadingModeEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontReadingModeEventParameterFontReadingMode;)
+ (NSString * _Nonnull)fontReadingModeEventParameterFontReadingMode SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontScrollViewEventName;)
+ (NSString * _Nonnull)fontScrollViewEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull fontScrollViewEventParameterFontScrollView;)
+ (NSString * _Nonnull)fontScrollViewEventParameterFontScrollView SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventName;)
+ (NSString * _Nonnull)markupEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventParameterKey;)
+ (NSString * _Nonnull)markupEventParameterKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventNormalVideoParameterValue;)
+ (NSString * _Nonnull)markupEventNormalVideoParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventYoutubeVideoParameterValue;)
+ (NSString * _Nonnull)markupEventYoutubeVideoParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventInlineVideoParameterValue;)
+ (NSString * _Nonnull)markupEventInlineVideoParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventDocumentParameterValue;)
+ (NSString * _Nonnull)markupEventDocumentParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventKitabooWidgetParameterValue;)
+ (NSString * _Nonnull)markupEventKitabooWidgetParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventHTMLActivityParameterValue;)
+ (NSString * _Nonnull)markupEventHTMLActivityParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventWebLinkParameterValue;)
+ (NSString * _Nonnull)markupEventWebLinkParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventScormParameterValue;)
+ (NSString * _Nonnull)markupEventScormParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventFIBParameterValue;)
+ (NSString * _Nonnull)markupEventFIBParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventKalturaVideoParameterValue;)
+ (NSString * _Nonnull)markupEventKalturaVideoParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventImageParameterValue;)
+ (NSString * _Nonnull)markupEventImageParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventImageSlideShowParameterValue;)
+ (NSString * _Nonnull)markupEventImageSlideShowParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventInstructionMarkupParameterValue;)
+ (NSString * _Nonnull)markupEventInstructionMarkupParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventAudioSyncParameterValue;)
+ (NSString * _Nonnull)markupEventAudioSyncParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventAudioParameterValue;)
+ (NSString * _Nonnull)markupEventAudioParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventGotoPageParameterValue;)
+ (NSString * _Nonnull)markupEventGotoPageParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventMultilinkMarkupParameterValue;)
+ (NSString * _Nonnull)markupEventMultilinkMarkupParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventDropDownParameterValue;)
+ (NSString * _Nonnull)markupEventDropDownParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventJumpToBookParameterValue;)
+ (NSString * _Nonnull)markupEventJumpToBookParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull markupEventImageMagnificationParameterValue;)
+ (NSString * _Nonnull)markupEventImageMagnificationParameterValue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull highLightPopUpEventName;)
+ (NSString * _Nonnull)highLightPopUpEventName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull highLightPopUpEventImmersiveReader;)
+ (NSString * _Nonnull)highLightPopUpEventImmersiveReader SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface LocalizationHelper (SWIFT_EXTENSION(KitabooSDKWithReader))
+ (NSString * _Nonnull)localizedStringWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader14LocalizeHelper")
@interface LocalizeHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LocalizeHelper * _Nonnull shared;)
+ (LocalizeHelper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setLanguage:(NSString * _Nonnull)lang;
- (NSString * _Nonnull)localizedStringForKey:(NSString * _Nullable)key SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)localizedStringForKey:(NSString * _Nullable)key tableName:(NSString * _Nonnull)tableName bundle:(NSBundle * _Nonnull)bundle SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader6NError")
@interface NError : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader7Options")
@interface Options : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PrintType, open) {
  PrintTypeBoth = 0,
  PrintTypeHighlights = 1,
  PrintTypeNotes = 2,
  PrintTypeNone = 3,
};


SWIFT_CLASS("_TtC20KitabooSDKWithReader27RTLorLTRFlowLayoutForReader")
@interface RTLorLTRFlowLayoutForReader : UICollectionViewFlowLayout
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;
@end

typedef SWIFT_ENUM(NSInteger, ReadAloudMode, open) {
  ReadAloudModeLetMeRead = 1,
  ReadAloudModeReadToMe = 2,
  ReadAloudModeAutoPlay = 3,
};


SWIFT_CLASS("_TtC20KitabooSDKWithReader16ReadAloudOptions")
@interface ReadAloudOptions : NSObject
- (nonnull instancetype)initWithVoice:(NSString * _Nonnull)voice speed:(NSInteger)speed autoplay:(BOOL)autoplay OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader22ResetAllViewController")
@interface ResetAllViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, copy) void (^ _Nullable OkButtonAction)(BOOL);
@property (nonatomic, copy) void (^ _Nullable CancelButtonAction)(void);
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSMutableDictionary;

SWIFT_CLASS("_TtC20KitabooSDKWithReader14TOCContentCell")
@interface TOCContentCell : UITableViewCell
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified barView;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified downArrowButton;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified cellLeadConstraint;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified dataLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified levelLabel;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified seperatorSuperviewLeadingConstraint;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified seperatorConstraintFromLevelLabel;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified seperatorView;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified widthConstraintOflevelLabel;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified sectionHeaderButton;
- (void)awakeFromNib;
- (void)configureViewForTocWithDataDictionary:(NSMutableDictionary * _Nonnull)dataDictionary themeVO:(KBHDThemeVO * _Nonnull)themeVO;
- (void)configureViewForStandardsWithDataDictionary:(NSMutableDictionary * _Nonnull)dataDictionary themeVO:(KBHDThemeVO * _Nonnull)themeVO;
- (void)configureViewForExternalResourcesWithDataDictionary:(NSMutableDictionary * _Nonnull)dataDictionary themeVO:(KBHDThemeVO * _Nonnull)themeVO;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader16TOCTableViewCell")
@interface TOCTableViewCell : UITableViewCell
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified pageLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified dataLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified timeLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified bookmarkLabel;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified barLabel;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified cellLeadConstraint;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified timeLabelBottomConstarint;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified verticalCenterConstarint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified bookmarkTrailingConstraint;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified seperatorViewForHeaderView;
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol TOCViewControllerDelegate;
@class HDReaderSettingModel;
@class KitabooBookVO;

SWIFT_CLASS("_TtC20KitabooSDKWithReader17TOCViewController")
@interface TOCViewController : UIViewController <UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, strong) NSLayoutConstraint * _Nonnull headerHeightConstraint;
@property (nonatomic, strong) NSMutableArray * _Nonnull _resourceArray;
@property (nonatomic) BOOL isExternalResourceAvailable;
@property (nonatomic, strong) id <TOCViewControllerDelegate> _Nullable _delegate;
@property (nonatomic) BookOrientationMode bookOrientation;
@property (nonatomic, strong) HDReaderSettingModel * _Nonnull userSettingsModel;
@property (nonatomic, strong) KitabooUser * _Nullable user;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithThemeVO:(KBHDThemeVO * _Nonnull)themeVO book:(KitabooBookVO * _Nonnull)book chapter:(NSInteger)chapter activePage:(NSArray * _Nonnull)activePage bookMarkDataArray:(NSArray * _Nonnull)bookMarkDataArray resourceDataArray:(NSMutableArray * _Nullable)resourceDataArray tocDataArray:(NSArray * _Nonnull)tocDataArray standardResourceArray:(NSArray * _Nonnull)standardResourceArray OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithThemeVO:(KBHDThemeVO * _Nonnull)themeVO book:(KitabooBookVO * _Nonnull)book chapter:(NSInteger)chapter chapterName:(NSString * _Nonnull)chapterName activePage:(NSArray * _Nonnull)activePage bookMarkDataArray:(NSArray * _Nonnull)bookMarkDataArray resourceDataArray:(NSMutableArray * _Nullable)resourceDataArray tocDataArray:(NSArray * _Nonnull)tocDataArray standardResourceArray:(NSArray * _Nonnull)standardResourceArray OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setDataWithData:(NSArray * _Nonnull)data;
- (void)viewDidLayoutSubviews;
- (void)actionForButtonWithSender:(UIButton * _Nonnull)sender;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)didSelectSectionWithSender:(UIButton * _Nonnull)sender;
- (void)navigateToPageWithDict:(NSDictionary * _Nonnull)dict;
- (void)didSelectDropdownForSectionWithSender:(UIButton * _Nonnull)sender;
- (void)didSelectCellDropDownButtonWithSender:(UIButton * _Nonnull)sender;
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (void)setStandardDataWithData:(NSArray * _Nonnull)data;
- (void)setExternalResourcesDataWithData:(NSArray * _Nonnull)data;
- (void)didReceiveMemoryWarning;
- (NSString * _Nonnull)getLocalizedStringFor:(NSString * _Nonnull)displayDateString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class KFLinkVO;
@class EPUBResource;

SWIFT_PROTOCOL("_TtP20KitabooSDKWithReader25TOCViewControllerDelegate_")
@protocol TOCViewControllerDelegate
- (void)didSelectActionToCloseTOC;
- (void)navigateToPageWithPageId:(NSString * _Nonnull)pageId;
- (void)actionForLinkWithLinkVO:(KFLinkVO * _Nonnull)linkVO;
- (void)actionForResource:(EPUBResource * _Nonnull)resource;
- (void)didSelectTEKSStandard;
- (void)didSelectELPSStandard;
- (void)didLoadWebLinkForStandardsWithWebLink:(NSString * _Nonnull)webLink;
- (NSArray * _Nonnull)didSelectInternalResources SWIFT_WARN_UNUSED_RESULT;
- (void)didSelectExternalResources;
- (void)didLoadWebLinkForExternalResourcesWithWebLink:(NSString * _Nonnull)webLink;
- (void)didSelectActionToJumpToBookWithBookID:(NSString * _Nonnull)bookID;
- (void)sessionExpiredOnTOC;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader36TeacherReviewClassListViewController")
@interface TeacherReviewClassListViewController : UIViewController <UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, copy) void (^ _Nullable RemoveAnnotataionController)(void);
@property (nonatomic, copy) void (^ _Nullable DidSelectClassName)(NSString * _Nonnull, NSArray * _Nonnull);
- (void)viewDidLoad;
- (void)setClassesWithClassesInfoArray:(NSArray * _Nonnull)classesInfoArray;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (void)closeViewController;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UISwitch;
@class UITextField;
@class SDKPentoolVO;
@class SDKFIBVO;

SWIFT_CLASS("_TtC20KitabooSDKWithReader27TeacherReviewViewController")
@interface TeacherReviewViewController : UIViewController <UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
@property (nonatomic, copy) NSString * _Nullable selectedLearnerImageUrl;
@property (nonatomic, copy) NSString * _Nullable selectedLearnerName;
@property (nonatomic, copy) NSString * _Nullable selectedLearnerID;
@property (nonatomic, copy) NSString * _Nullable SelectedPageIdentifier;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable studentPageUGCDictionary;
@property (nonatomic, copy) NSString * _Nullable selectedClassName;
@property (nonatomic) BOOL isAnnotationEnabled;
@property (nonatomic, strong) NSArray * _Nullable studentSubmittedPageArray;
@property (nonatomic, strong) KBHDThemeVO * _Nullable themeVo;
@property (nonatomic, strong) NSArray * _Nullable selectedFibArray;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull studentDataDict;
@property (nonatomic, copy) void (^ _Nullable RemoveAnnotataionController)(void);
@property (nonatomic, copy) void (^ _Nullable DidTapOnChangeClassButton)(void);
@property (nonatomic, copy) void (^ _Nullable FetchEachLearnerData)(NSString * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable LearnerSelectionAction)(NSArray * _Nonnull, NSString * _Nonnull);
- (void)viewDidLoad;
- (void)annotationSwitchChanged:(UISwitch * _Nonnull)sender;
- (void)mainViewTapped;
- (BOOL)textFieldShouldClear:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doesCurrentPageHaveActiveUGC SWIFT_WARN_UNUSED_RESULT;
- (NSArray * _Nonnull)getPenToolUGCForPageIdentifier:(NSString * _Nonnull)pageIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSArray * _Nonnull)getFIBUGCForPageIdentifier:(NSString * _Nonnull)pageIdentifier SWIFT_WARN_UNUSED_RESULT;
- (void)updatePenDrawing:(SDKPentoolVO * _Nonnull)penDrawing;
- (void)updateFIBData:(SDKFIBVO * _Nonnull)fibVO;
- (void)addPenDrawing:(SDKPentoolVO * _Nonnull)penDrawing;
- (SDKFIBVO * _Nullable)getSDKFIBVOWithUgcId:(NSString * _Nonnull)ugcId SWIFT_WARN_UNUSED_RESULT;
- (NSArray * _Nonnull)getAnotationToSave SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEditingAllowedForLinkID:(NSInteger)linkId SWIFT_WARN_UNUSED_RESULT;
- (SDKFIBVO * _Nullable)getSDKFIBVOForLinkID:(NSInteger)linkId SWIFT_WARN_UNUSED_RESULT;
- (void)clearAllFIBsForPageID:(NSString * _Nonnull)pageId;
- (void)clearAllPenDrawingsForPageID:(NSString * _Nonnull)pageId;
- (void)clearAllFIBs;
- (void)clearAllPenDrawings;
- (BOOL)isFIBsAndPentoolAvailableOnPageID:(NSString * _Nonnull)pageId SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isFIBsAndPentoolAvailable SWIFT_WARN_UNUSED_RESULT;
- (void)startActivityIndicator;
- (void)stopActivityIndicator;
- (void)setDataWithClassName:(NSString * _Nonnull)className studentList:(NSArray * _Nonnull)studentList;
- (void)serviceFailedWithLearnerID:(NSString * _Nonnull)learnerId;
- (void)setSubmittedStudentUGCArray:(NSDictionary<NSString *, id> * _Nonnull)studentDataDictionary;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (void)backButtonTapped;
- (void)jumpToNextStudent;
- (void)jumpToPreviousStudent;
- (BOOL)isAvailableNextStudent SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isAvailablePreviousStudent SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getStudentCount SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getStudentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)changeClassButtonTapped;
- (void)closeViewController;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class RendererViewController;
@class PlayerActionBarItem;

SWIFT_CLASS("_TtC20KitabooSDKWithReader24TextAnnotationActionView")
@interface TextAnnotationActionView : PlayerActionBar
@property (nonatomic, strong) NSLayoutConstraint * _Nonnull textAnnotationBottomMarginConstraint;
@property (nonatomic) BOOL isTextAnnotationAvailable;
@property (nonatomic) BOOL isTextAnnotationKeyboardAvailable;
@property (nonatomic) NSInteger numberOfItems;
- (void)addPlayerBottomBarForTextAnnotationWithParentView:(UIView * _Nonnull)parentView hdThemeVO:(KBHDThemeVO * _Nonnull)hdThemeVO bookType:(KitabooBookVO * _Nonnull)bookType renderer:(RendererViewController * _Nonnull)renderer;
- (PlayerActionBarItem * _Nullable)getTextAnnotationViewItemWithTag:(NSInteger)penToolBarItemType SWIFT_WARN_UNUSED_RESULT;
- (void)updateSelectedLabelItemWithIsSelected:(BOOL)isSelected themeVO:(KBHDThemeVO * _Nonnull)themeVO tag:(NSInteger)tag;
- (void)updateTextAnnotationSaveItemWithIsTextAvailable:(BOOL)isTextAvailable themeVO:(KBHDThemeVO * _Nonnull)themeVO;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader33TextAnnotationAlignmentActionView")
@interface TextAnnotationAlignmentActionView : PlayerActionBar
@property (nonatomic) NSTextAlignment selectedAlignment;
@property (nonatomic) CGPoint atPoint;
@property (nonatomic) NSInteger numberOfItems;
- (void)addTextAnnotationAlignmentViewWithHdThemeVO:(KBHDThemeVO * _Nonnull)hdThemeVO currentBook:(KitabooBookVO * _Nonnull)currentBook parentView:(UIView * _Nonnull)parentView onView:(UIView * _Nonnull)onView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader31TextAnnotationPalleteActionView")
@interface TextAnnotationPalleteActionView : PlayerActionBar
@property (nonatomic, strong) UIColor * _Nonnull selectedColor;
- (void)addTextAnnotationTextColorViewWithHdThemeVO:(KBHDThemeVO * _Nonnull)hdThemeVO currentBook:(KitabooBookVO * _Nonnull)currentBook parentView:(UIView * _Nonnull)parentView onView:(UIView * _Nonnull)onView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol TextSearchViewDelegate;
@class TextSearchResult;

SWIFT_CLASS("_TtC20KitabooSDKWithReader14TextSearchView")
@interface TextSearchView : UIView <UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, strong) UITextField * _Nonnull searchBar;
@property (nonatomic, strong) id <TextSearchViewDelegate> _Nullable delegate;
@property (nonatomic, strong) NSMutableArray * _Nonnull searchResultArray;
@property (nonatomic) BOOL isAudioSearchEnabled;
@property (nonatomic, strong) UIButton * _Nonnull cancelBtn;
@property (nonatomic, strong) UIButton * _Nonnull openBtn;
@property (nonatomic, strong) UIButton * _Nonnull nextBtn;
@property (nonatomic, strong) UIButton * _Nonnull PrevBtn;
@property (nonatomic, strong) UIButton * _Nonnull animateMicButton;
@property (nonatomic, copy) void (^ _Nullable didClickOnSearchResult)(TextSearchResult * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable didClickOnNextResult)(TextSearchResult * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable didClickOnPreviousResult)(TextSearchResult * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable didClickOnOpenResult)(TextSearchResult * _Nonnull);
@property (nonatomic) NSInteger batchSize;
@property (nonatomic) NSInteger searchoffset;
- (void)updateSearchDataWithArrayWithArray:(NSArray * _Nonnull)array;
- (nonnull instancetype)initWithFrame:(CGRect)frame themeVO:(KBHDThemeVO * _Nonnull)themeVO currentBookVO:(KitabooBookVO * _Nonnull)currentBookVO OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithElasticSearch:(CGRect)frame themeVO:(KBHDThemeVO * _Nonnull)themeVO currentBookVO:(KitabooBookVO * _Nonnull)currentBookVO isAudioSearchEnabled:(BOOL)isAudioSearchEnabled OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initForReaderSearch:(CGRect)frame themeVO:(KBHDThemeVO * _Nonnull)themeVO currentBookVO:(KitabooBookVO * _Nonnull)currentBookVO isAudioSearchEnabled:(BOOL)isAudioSearchEnabled OBJC_DESIGNATED_INITIALIZER;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)showGeneratingSearchResultView;
- (void)renderSearchResultWithSearchResult:(NSArray * _Nonnull)searchResult;
- (void)renderSearchResultWithSearchResult:(NSArray * _Nonnull)searchResult withCaseSensitiveSearch:(BOOL)caseSensitive;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)showSearchResultView;
- (void)removeSearchResultView;
- (TextSearchResult * _Nullable)getNextSearchResult:(TextSearchResult * _Nonnull)currentSearchResult SWIFT_WARN_UNUSED_RESULT;
- (TextSearchResult * _Nullable)getPreviousSearchResult:(TextSearchResult * _Nonnull)currentSearchResult SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_PROTOCOL_NAMED("TextSearchViewDelegate")
@protocol TextSearchViewDelegate
- (NSArray * _Nullable)fetchNextSearchResultForText:(NSString * _Nonnull)searchText WithStartOffset:(NSInteger)startOffset WithBatchSize:(NSInteger)batchSize SWIFT_WARN_UNUSED_RESULT;
- (void)voiceSearchText:(NSString * _Nonnull)searchText isElasticSearch:(BOOL)isElasticSearch;
- (void)showPermissionAlert;
- (void)voiceSearchNotAvailable;
- (void)startVoiceRecognition;
- (void)stopVoiceRecognition;
@end


SWIFT_CLASS("_TtC20KitabooSDKWithReader18TranslationOptions")
@interface TranslationOptions : NSObject
- (nonnull instancetype)initWithLanguage:(NSString * _Nonnull)language autoEnableDocumentTranslation:(BOOL)autoEnableDocumentTranslation autoEnableWordTranslation:(BOOL)autoEnableWordTranslation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface UIFont (SWIFT_EXTENSION(KitabooSDKWithReader))
+ (void)jbs_registerFontWithFilenameString:(NSString * _Nonnull)filenameString bundle:(NSBundle * _Nonnull)bundle;
@end





#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
